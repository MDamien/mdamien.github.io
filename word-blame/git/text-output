
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
#include "
[ 70827b15bfb11f7aea52c6995956be9d149233e1 Linus Torvalds Split up builtin commands into separate files from git.c ]
builtin
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
.h"
[ b2141fc1d20e659810245ec6ca1c143c60e033ec Brandon Williams config: don't include config.h by default ]

#include "config.h"
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]

#include "exec
[ d807c4a01db2b06db047fc6d5d18ac25c8f05bd7 Stefan Beller exec_cmd: rename to use dash in file name ]
-
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
cmd.h"
[ fd5c363da4635d81f29193ae19d8fa7b5657ab39 Thiago Farina builtin.h: Move two functions definitions to help.h. ]

#include "help.h"
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]

#include "run-command.h"
[ 65b5f9483eafea0ccdea59884da4e00e0cfeee1f Nguyễn Thái Ngọc Duy Move declaration for alias.c to alias.h ]

#include "alias.h"
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]


#define
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP		(
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
1
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
<<0)
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]

#define RUN_SETUP_GENTLY
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
	(1<<1)
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]

#define USE_PAGER
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
		(1<<2)
/*
 * require working tree to be present -- anything uses this needs
 * RUN_SETUP for reading from the configuration file.
 */
#define
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
 NEED
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
WORK_TREE
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]
		(1<<3)
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

#define SUPPORT_SUPER_PREFIX
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
	(1<<4)
[ c409824cc2abac46e06091fcb29639b048d23b5d Martin Ågren git.c: let builtins opt for handling `pager.foo` themselves ]

#define DELAY_PAGER_CONFIG	(1<<5)
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]

#define NO_PARSEOPT		(1<<6) /* parse-options is not used */
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]


struct cmd
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
_
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
struct {
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	const char *cmd;
	int (*fn)(int,
[ 9201c707426b3dc0c894775416f576c25c008d46 Junio C Hamano Const tightening. ]
 const
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 char **,
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
 const
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 char *);
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]

	unsigned
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
 int
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
 option
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

};
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]


const char git
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
_usage
[ 4050c0df8ec7043315e2192695de432875239775 Junio C Hamano Clean up compatibility definitions. ]
_
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
string[] =
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]

	N_(
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
"git [--version]
[ 03a0fb0ccf48c831060c2243f830b6a12cd8fdf3 Kevin Bracey git.c: make usage match manual page ]
 [--help] [-C
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]
 <path>] [-c
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 <
[ 03a0fb0ccf48c831060c2243f830b6a12cd8fdf3 Kevin Bracey git.c: make usage match manual page ]
name
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
>
[ 03a0fb0ccf48c831060c2243f830b6a12cd8fdf3 Kevin Bracey git.c: make usage match manual page ]
=
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
<
[ 03a0fb0ccf48c831060c2243f830b6a12cd8fdf3 Kevin Bracey git.c: make usage match manual page ]
value
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
>
[ 03a0fb0ccf48c831060c2243f830b6a12cd8fdf3 Kevin Bracey git.c: make usage match manual page ]
]\n"
	   "
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
           [--exec-path[=
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
<
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
path
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
>
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
]]
[ 89a56bfbd3fd855cb0c2a381520e6255de41a55e Markus Heidelberg add --html-path to get the location of installed HTML docs ]
 [--html-path]
[ f2dd8c3799ddbd7df63a89a9043916f8545a70a3 Jon Seymour git: add --info-path and --man-path options ]
 [--man-path] [--info-path]
[ 511a3fc116799df5e3b2262f8f6e501ca73ba2fe Matthieu Moy wrap git's main usage string. ]
\n"
	   "
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
           [-
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
p | --paginate
[ 7213c288187bd9ef1e32e4f86c20c55436f1ae90 Johannes Sixt git: add -P as a short option for --no-pager ]
 | -P
[ 463a849d004b2a3f3c8254b1e7985d4e986b9f1a Matthieu Moy Add and document a global --no-pager option for git. ]
 | --no-pager
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
]
[ b0fa7ab51b29d34579d8f6bb4443dfbcb8278c7a Christian Couder git: add --no-replace-objects option to disable replacing ]
 [--no-replace-objects]
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]
 [--bare]
[ 511a3fc116799df5e3b2262f8f6e501ca73ba2fe Matthieu Moy wrap git's main usage string. ]
\n"
	   "
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
           [--git-dir=
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
<path>
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
] [-
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
-
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
work-tree=
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
<path>
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
]
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]
 [--namespace=<name>]
[ 511a3fc116799df5e3b2262f8f6e501ca73ba2fe Matthieu Moy wrap git's main usage string. ]
\n"
[ 293b07f114796d39c5571d5fe4808e898e5af0c8 Thomas Rast Fix 'git' wrapper usage string ]

	   "
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
           <
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
command
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
>
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
 [
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
<
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
args
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
>
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
]
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
"
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
;
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]


const char git_more_info_string[] =
[ 9665627d8cc6f0263f0019e92c67a38223804b57 Nguyễn Thái Ngọc Duy i18n: help: mark strings for translation ]

	N_(
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
"
[ 73903d0bcb00518e508f412a1d5c482b5094587e Philip Oakley help: mention -a and -g option, and 'git help <concept>' usage. ]
'git help -a' and 'git help -g'
[ ad5fe3771b50f3862130d150b5cc8bb316ef6f1c Alex Henrie grammofix in user-facing messages ]
 list
[ 73903d0bcb00518e508f412a1d5c482b5094587e Philip Oakley help: mention -a and -g option, and 'git help <concept>' usage. ]
 available subcommands and some\n"
	   "concept guides.
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
 See 'git help
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
 <
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
command
[ 62b4698e551c29b3d2539a764ad0e93cfff53c03 Štěpán Němec Use angles for placeholders consistently ]
>
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
'
[ 73903d0bcb00518e508f412a1d5c482b5094587e Philip Oakley help: mention -a and -g option, and 'git help <concept>' usage. ]
 or 'git help <concept>'\n"
	   "to read about
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
 a specific
[ 73903d0bcb00518e508f412a1d5c482b5094587e Philip Oakley help: mention -a and -g option, and 'git help <concept>' usage. ]
 subcommand or concept
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
."
[ 9665627d8cc6f0263f0019e92c67a38223804b57 Nguyễn Thái Ngọc Duy i18n: help: mark strings for translation ]
)
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
;
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]


static int use_pager = -1;
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]


static void list_builtins(
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
struct string_list *list,
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 unsigned int exclude_option
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
)
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
;
[ e11dca10cfb3ef1e561c3e789b346a9719f0344a Nguyễn Thái Ngọc Duy completion: add and use --list-cmds=nohelpers ]


static void exclude_helpers_from_list(struct string_list *list)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

{
[ e11dca10cfb3ef1e561c3e789b346a9719f0344a Nguyễn Thái Ngọc Duy completion: add and use --list-cmds=nohelpers ]

	int i = 0;

	while (i < list->nr) {
		if (strstr(list->items[i].string, "--"))
			unsorted_string_list_delete_item(list, i, 0);
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

		else
[ e11dca10cfb3ef1e561c3e789b346a9719f0344a Nguyễn Thái Ngọc Duy completion: add and use --list-cmds=nohelpers ]

			i++;
[ f0853837d6ee69dccfa59222a0e869de94bdddc6 Junio C Hamano git-log: match rev-list --abbrev and --abbrev-commit ]

	}
[ 52b70d56bd23811003a72866cc23a0a44b9da1b7 Junio C Hamano git log [diff-tree options]... ]

}
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]


static int match
[ 6a2df51c848c86e5620dcdf1a0ee2de637937b77 Stefan Beller shallow: add repository argument to set_alternate_shallow_file ]
_
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]
token(const char *spec
[ 6a2df51c848c86e5620dcdf1a0ee2de637937b77 Stefan Beller shallow: add repository argument to set_alternate_shallow_file ]
,
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]
 int len, const char *token)
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

{
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]

	int token_len = strlen(token);

	return len == token_len && !strncmp(spec, token, token_len);
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]

}
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]


static int list_cmds(const char *spec)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

{
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]

	struct string_list list = STRING_LIST_INIT_DUP
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
;
	int i;
[ 83b0ecf333e518867935f6b12c18294a8a7f5017 Jeff King git: read local config in --list-cmds ]

	int nongit;

	/*
	* Set up the repository so we can pick up any repo-level config (like
	* completion.commands).
	*/
	setup_git_directory_
[ 20de316e33446f37200e51aa333ba7d824dfd478 Johannes Schindelin difftool: allow running outside Git worktrees with --no-index ]
gently
[ 83b0ecf333e518867935f6b12c18294a8a7f5017 Jeff King git: read local config in --list-cmds ]
(&nongit);
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]


	while (*spec) {
		const char *sep = strchrnul(spec, ',');
		int len = sep - spec;

		if (match_token(spec, len, "builtins"))
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]

			list_builtins(
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
&list,
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 0
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
);
[ 6bb2dc0b9472a84c7d17ee93bda28a7c1c97d415 Nguyễn Thái Ngọc Duy completion: implement and use --list-cmds=main,others ]

		else if (match_token(spec, len, "main"))
			list_all_main_cmds(&list);
		else if (match_token(spec, len, "others"))
			list_all_other_cmds(&list);
[ e11dca10cfb3ef1e561c3e789b346a9719f0344a Nguyễn Thái Ngọc Duy completion: add and use --list-cmds=nohelpers ]

		else if (match_token(spec, len, "nohelpers"))
			exclude_helpers_from_list(&list);
[ 3301d36b29467a05107340e4d9688ebf74335021 Nguyễn Thái Ngọc Duy completion: add and use --list-cmds=alias ]

		else if (match_token(spec, len, "alias"))
			list_aliases(&list);
[ 6532f3740b1c228c0a2a03a4126f4f7e4f2d73e7 Nguyễn Thái Ngọc Duy completion: allow to customize the completable command list ]

		else if (match_token(spec, len, "config"))
			list_cmds_by_config(&list);
[ 3c7777672bf9bc9ac2ddb422633b39af4faa1682 Nguyễn Thái Ngọc Duy git: support --list-cmds=list-<category> ]

		else if (len > 5 && !strncmp(spec, "list-", 5)) {
[ 7cf16a14f5c070f7b14cf28023769450133172ae Michael J Gruber handle_alias: provide GIT_PREFIX to !alias ]

			struct strbuf sb = STRBUF_INIT;
[ 3c7777672bf9bc9ac2ddb422633b39af4faa1682 Nguyễn Thái Ngọc Duy git: support --list-cmds=list-<category> ]


			strbuf_add(&sb, spec + 5, len - 5);
			list_cmds_by_category(&list, sb.buf);
[ 606ee4be54b5ef3c8593a71b4b1bd6b4ee2d323d Junio C Hamano Merge branch 'js/info-man-path' ]

			strbuf_release(&sb);
[ ea77e675e564211513ebedb4f5bdcda482d7fd30 Linus Torvalds Make "git help" react to window size correctly ]

		}
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

		else
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]

			die(_("unsupported command listing type '%s'"), spec);
		spec += len;
		if (*spec == ',')
			spec++;
[ ea77e675e564211513ebedb4f5bdcda482d7fd30 Linus Torvalds Make "git help" react to window size correctly ]

	}
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]

	for (i = 0;
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
 i < list.nr;
[ a2f8028d3d661b314d5a784764f2f5f9e4c2dde0 Johannes Schindelin Make '!' aliases more useful ]
 i++)
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]

		puts(list.items[i].string);
	string_list_clear(&list
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
,
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
 0
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
)
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	return 0;
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

}
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]


static void commit_pager_choice(void)
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]

{
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	switch (use_pager) {
	case 0:
[ 463a849d004b2a3f3c8254b1e7985d4e986b9f1a Matthieu Moy Add and document a global --no-pager option for git. ]

		setenv("GIT_PAGER", "cat", 1);
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

		break;
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	case 1:
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]

		setup_pager();
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

		break;
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	default:
		break;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	}
[ 97fc6c5fbacc2181319bbd7e2faa8ac04476f862 Andreas Ericsson git --help COMMAND brings up the git-COMMAND man-page. ]

}
[ 033fe3d92ca16c36fb45ed7cb58d42344088e7bd Martin Ågren git.c: provide setup_auto_pager() ]


void setup_auto_pager(const char *cmd, int def)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ 033fe3d92ca16c36fb45ed7cb58d42344088e7bd Martin Ågren git.c: provide setup_auto_pager() ]

	if (use_pager != -1 || pager_in_use())
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]

		return;
[ 033fe3d92ca16c36fb45ed7cb58d42344088e7bd Martin Ågren git.c: provide setup_auto_pager() ]

	use_pager = check_pager_config(cmd);
	if (use_pager == -1)
		use_pager = def;
	commit_pager_choice();
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]


static int handle_options(const char ***argv, int *argc
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
, int *envchanged
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]

	const char **
[ 73546c085d49694c5e54b421f80bde6bc25006fb Junio C Hamano handle_options(): do not miscount how many arguments were used ]
orig
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
_argv =
[ 73546c085d49694c5e54b421f80bde6bc25006fb Junio C Hamano handle_options(): do not miscount how many arguments were used ]
 *
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
argv;
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]


	while (*argc > 0) {
		const char *cmd = (*argv)[0];
		if (cmd[0] != '-')
			break;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


		/*
		 * For legacy reasons, the "version" and "help"
		 * commands can be written with "--" prepended
		 * to make them look like flags.
		 */
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]

		if (
[ 85fb65ed6e41e93760a91b33b512d3d9dc67ac66 Junio C Hamano "git -p cmd" to page anywhere ]
!strcmp
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
(
[ 85fb65ed6e41e93760a91b33b512d3d9dc67ac66 Junio C Hamano "git -p cmd" to page anywhere ]
cmd,
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
 "
[ 85fb65ed6e41e93760a91b33b512d3d9dc67ac66 Junio C Hamano "git -p cmd" to page anywhere ]
-
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
-help
[ 85fb65ed6e41e93760a91b33b512d3d9dc67ac66 Junio C Hamano "git -p cmd" to page anywhere ]
") || !strcmp(cmd, "--
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
version"))
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			break;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


		/*
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

		 * Check remaining flags.
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

		 */
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

		if (
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
prefix
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
(cmd, "--exec-path"
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
, &cmd
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
)) {
			if (*cmd == '=')
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

				git_set_exec_path(cmd
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
 + 1
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			else {
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]

				puts
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
(git
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]
_
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
exec_
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]
path
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
()
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]
)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
;
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

				trace2_cmd_name("_query_");
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

				exit(0);
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

			}
[ 89a56bfbd3fd855cb0c2a381520e6255de41a55e Markus Heidelberg add --html-path to get the location of installed HTML docs ]

		} else if (!strcmp(cmd, "--html-path")) {
			puts(system_path(GIT_HTML_PATH));
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			trace2_cmd_name("_query_");
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			exit(0);
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]

		} else if (!strcmp(cmd, "--man-path")) {
			puts(system_path(GIT_MAN_PATH));
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			trace2_cmd_name("_query_");
[ f2dd8c3799ddbd7df63a89a9043916f8545a70a3 Jon Seymour git: add --info-path and --man-path options ]

			exit(0);
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]

		} else if (!strcmp(cmd, "--info-path")) {
			puts(system_path(GIT_INFO_PATH));
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			trace2_cmd_name("_query_");
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]

			exit(
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
0
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]
)
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

		} else if (!strcmp(cmd, "-p") || !strcmp(cmd, "--
[ 85fb65ed6e41e93760a91b33b512d3d9dc67ac66 Junio C Hamano "git -p cmd" to page anywhere ]
paginate
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
")) {
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

			use_pager = 1;
[ 463a849d004b2a3f3c8254b1e7985d4e986b9f1a Matthieu Moy Add and document a global --no-pager option for git. ]

		} else if (
[ 7213c288187bd9ef1e32e4f86c20c55436f1ae90 Johannes Sixt git: add -P as a short option for --no-pager ]
!strcmp(cmd, "-P") ||
[ 463a849d004b2a3f3c8254b1e7985d4e986b9f1a Matthieu Moy Add and document a global --no-pager option for git. ]
 !strcmp(cmd, "--no-pager")) {
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

			use_pager = 0;
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]

			if (envchanged)
				*envchanged = 1;
[ b0fa7ab51b29d34579d8f6bb4443dfbcb8278c7a Christian Couder git: add --no-replace-objects option to disable replacing ]

		} else if (!strcmp(cmd, "--no-replace-objects")) {
			read_replace_refs = 0;
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]

			setenv
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
(
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]
NO_REPLACE_OBJECTS_ENVIRONMENT
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
, "
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]
1
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
"
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]
, 1
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
)
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]
;
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]

			if (envchanged)
				*envchanged = 1;
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]

		} else
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
 if
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
 (
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
!strcmp(cmd, "--git-dir")) {
			if (*argc <
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
 2
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
)
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
 {
				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
"no directory given for
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
 -
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
-git-dir\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
;
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]

				usage(
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
git
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
_usage_string);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			}
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

			setenv(GIT_DIR
[ 45b097947d6297a4b3f1016b05c66cdc15b411c2 Shawn O. Pearce Replace "GIT_DIR" with GIT_DIR_ENVIRONMENT. ]
_ENVIRONMENT
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
, (*argv)[1], 1);
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]

			if (envchanged)
				*envchanged = 1;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

			(*argv)++;
			(*argc)--;
		} else if (
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
prefix
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
(cmd, "--git-dir="
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
, &cmd
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
)) {
			setenv(GIT_DIR
[ 45b097947d6297a4b3f1016b05c66cdc15b411c2 Shawn O. Pearce Replace "GIT_DIR" with GIT_DIR_ENVIRONMENT. ]
_ENVIRONMENT
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
, cmd, 1);
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]

			if (envchanged)
				*envchanged = 1;
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

		} else if (!strcmp(cmd, "--namespace")) {
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

			if (*argc < 2) {
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]
"no namespace given for --namespace\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]
;
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]

				usage(git
[ 4264dc15e198bf9e9a2bb4ee897dd8e3eaabca47 Junio C Hamano git reflog expire ]
_
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
usage
[ 4264dc15e198bf9e9a2bb4ee897dd8e3eaabca47 Junio C Hamano git reflog expire ]
_
[ c321f00d09f56dcf2f149757a2a337f3732f3097 Brian Gernhardt Keep "git --git-dir" from causing a bus error. ]
string);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			}
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]

			setenv(GIT_NAMESPACE_ENVIRONMENT, (*argv)[1
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
]
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]
, 1);
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]

			if (envchanged)
				*envchanged = 1;
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

			(*argv)++;
			(*argc)--;
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]

		} else if (
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
prefix
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]
(cmd, "
[ 281e67d6fa8e523147792c17fbe6db03f13f72e1 Alan Chandler Fix usage string to match that given in the man page ]
--
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]
namespace="
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
, &cmd
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]
)) {
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

			setenv(GIT_NAMESPACE_ENVIRONMENT, cmd, 1);
[ 463a849d004b2a3f3c8254b1e7985d4e986b9f1a Matthieu Moy Add and document a global --no-pager option for git. ]

			if (envchanged)
				*envchanged = 1;
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

		} else if (!strcmp(cmd, "--work-tree")) {
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

			if (*argc < 2) {
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
"no directory given for --work-tree\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
;
				usage(git_usage_string);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			}
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

			setenv(GIT_WORK_TREE_ENVIRONMENT, (*argv)[1], 1);
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]

			if (
[ 6476b38b1f3d258006566c3c9c6c80cc07fda354 Christian Couder replace: use a GIT_NO_REPLACE_OBJECTS env variable ]
envchanged)
				*envchanged = 1;
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

			(*argv)++;
			(*argc)--;
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]

		} else if (
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
prefix
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
(cmd, "--work-tree="
[ ae021d87911da4328157273df24779892cb51277 Jeff King use skip_prefix to avoid magic numbers ]
, &cmd
[ 892c41b98ae2e6baf3aa13901cb10db9ac67d2f3 Matthias Lederhofer introduce GIT_WORK_TREE to specify the work tree ]
)) {
			setenv(GIT_WORK_TREE_ENVIRONMENT, cmd, 1);
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

			if (envchanged)
				*envchanged = 1;
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

		} else if (!strcmp(cmd
[ 4a73aaaf18099ec1897330dd6c4a09f10ea2f573 Jeff King patch-id: use RUN_SETUP_GENTLY ]
,
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
 "--super-prefix")) {
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

			if (*argc < 2) {
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
"no prefix given for --super-prefix\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
;
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

				usage(git_usage_string);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

			}
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			setenv(GIT
[ 4a73aaaf18099ec1897330dd6c4a09f10ea2f573 Jeff King patch-id: use RUN_SETUP_GENTLY ]
_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
SUPER
[ 4a73aaaf18099ec1897330dd6c4a09f10ea2f573 Jeff King patch-id: use RUN_SETUP_GENTLY ]
_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
PREFIX
[ 4a73aaaf18099ec1897330dd6c4a09f10ea2f573 Jeff King patch-id: use RUN_SETUP_GENTLY ]
_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
ENVIRONMENT, (*argv)[1], 1);
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

			if (envchanged)
				*envchanged = 1;
[ 6ed547b53b90bebd2371b086b83b416b22b243b2 Junio C Hamano Merge branch 'js/ref-namespaces' ]

			(*argv)++;
			(*argc)--;
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

		} else if (skip
[ 4a73aaaf18099ec1897330dd6c4a09f10ea2f573 Jeff King patch-id: use RUN_SETUP_GENTLY ]
_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
prefix(cmd, "--super-prefix=", &cmd)) {
			setenv(GIT_SUPER_PREFIX_ENVIRONMENT, cmd, 1);
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]

			if (envchanged)
				*envchanged = 1;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

		} else if (!strcmp(cmd, "--bare")) {
			char
[ f655651e09b9fa7bf8ff13f1b4a5b16c7956e4cf Junio C Hamano Merge branch 'rs/strbuf-getcwd' ]
 *cwd = xgetcwd()
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
;
[ 6adcca3fe84e6859fc62df6c4ab916192ca02795 Junio C Hamano Fix initialization of a bare repository ]

			is_bare_repository_cfg = 1;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

			setenv(GIT_DIR
[ 45b097947d6297a4b3f1016b05c66cdc15b411c2 Shawn O. Pearce Replace "GIT_DIR" with GIT_DIR_ENVIRONMENT. ]
_ENVIRONMENT
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
,
[ 4d3ab44d26c47d100cec39d0ef9ed9746eb7e454 René Scharfe use xgetcwd() to set $GIT_DIR ]
 cwd
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
,
[ 9277d60233a1829742aa2d9d20ddbfc3b2b7acde Junio C Hamano git --bare cmd: do not unconditionally nuke GIT_DIR ]
 0
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
);
[ f655651e09b9fa7bf8ff13f1b4a5b16c7956e4cf Junio C Hamano Merge branch 'rs/strbuf-getcwd' ]

			free
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
(
[ f655651e09b9fa7bf8ff13f1b4a5b16c7956e4cf Junio C Hamano Merge branch 'rs/strbuf-getcwd' ]
cwd
[ ef5ddb2fe0cdb3bd09acb7229512b6ae9193423f Shawn O. Pearce Use PATH_MAX constant for --bare. ]
)
[ f655651e09b9fa7bf8ff13f1b4a5b16c7956e4cf Junio C Hamano Merge branch 'rs/strbuf-getcwd' ]
;
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]

			setenv(GIT_
[ 2cd83d10bb6bcf768129e1c4e5a4dee4b6bcd27f Jeff King setup: suppress implicit "." work-tree for bare repos ]
IMPLICIT
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
_
[ 2cd83d10bb6bcf768129e1c4e5a4dee4b6bcd27f Jeff King setup: suppress implicit "." work-tree for bare repos ]
WORK
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
_
[ 2cd83d10bb6bcf768129e1c4e5a4dee4b6bcd27f Jeff King setup: suppress implicit "." work-tree for bare repos ]
TREE
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
_ENVIRONMENT, "0", 1);
			if (envchanged)
				*envchanged = 1;
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

		} else if (!strcmp(cmd, "-c")) {
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]

			if (*argc < 2) {
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]
"-c expects a configuration string\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]
;
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

				usage(git_usage_string);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

			}
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]

			git_config_
[ 2b64fc894dada0916558fd0bfd19c50631f978cb Jeff King pass "git -c foo=bar" params through environment ]
push
[ 8b1fa778676ae94f7a6d4113fa90947b548154dd Alex Riesen Allow passing of configuration parameters in the command line ]
_parameter((*argv)[1]);
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]

			(*argv)++;
			(*argc)--;
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]

		} else if (!strcmp(cmd, "--literal-pathspecs")) {
[ fb3b7b1f95ce3c39f1116ebabf0bbcbfd3bb8796 Junio C Hamano Merge branch 'jk/alias-in-bare' ]

			setenv(GIT_
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
LITERAL
[ fb3b7b1f95ce3c39f1116ebabf0bbcbfd3bb8796 Junio C Hamano Merge branch 'jk/alias-in-bare' ]
_
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
PATHSPECS
[ fb3b7b1f95ce3c39f1116ebabf0bbcbfd3bb8796 Junio C Hamano Merge branch 'jk/alias-in-bare' ]
_
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]
ENVIRONMENT, "1", 1);
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]

			if (envchanged)
[ bd30c2e48432c692f9e77d3529c9cf25117066bb Nguyễn Thái Ngọc Duy pathspec: support :(glob) syntax ]

				*envchanged = 1;
[ 823ab40fd4adc5bf5b5c66b6d189deae34d2a138 Jeff King add global --literal-pathspecs option ]

		} else if (!strcmp(cmd, "--no-literal-pathspecs")) {
			setenv(GIT_LITERAL_PATHSPECS
[ fb3b7b1f95ce3c39f1116ebabf0bbcbfd3bb8796 Junio C Hamano Merge branch 'jk/alias-in-bare' ]
_ENVIRONMENT, "0", 1);
[ bd30c2e48432c692f9e77d3529c9cf25117066bb Nguyễn Thái Ngọc Duy pathspec: support :(glob) syntax ]

			if (envchanged)
				*envchanged = 1;
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]

		} else if (!strcmp(cmd, "--glob-pathspecs"))
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
 {
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]

			setenv(GIT_GLOB_PATHSPECS_ENVIRONMENT, "1
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
",
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
 1);
[ bd30c2e48432c692f9e77d3529c9cf25117066bb Nguyễn Thái Ngọc Duy pathspec: support :(glob) syntax ]

			if (envchanged)
[ 93d935371654faf2956a4c37c1ca46f3195ee832 Nguyễn Thái Ngọc Duy parse_pathspec: accept :(icase)path syntax ]

				*envchanged = 1;
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]

		} else if (!strcmp(
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
cmd
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
, "--noglob-pathspecs")) {
			setenv(GIT
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
_
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
NOGLOB
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
_
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
PATHSPECS_ENVIRONMENT
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
,
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
 "1"
[ b02f5aeda6f66ac3be9b2e35f9b237d4f1f80d73 Junio C Hamano Merge branch 'jl/submodule-mv' ]
,
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]
 1);
[ 93d935371654faf2956a4c37c1ca46f3195ee832 Nguyễn Thái Ngọc Duy parse_pathspec: accept :(icase)path syntax ]

			if (envchanged)
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]

				*envchanged = 1;
[ 93d935371654faf2956a4c37c1ca46f3195ee832 Nguyễn Thái Ngọc Duy parse_pathspec: accept :(icase)path syntax ]

		} else if (!strcmp(cmd, "--icase-pathspecs")) {
			setenv(GIT_ICASE_PATHSPECS_ENVIRONMENT, "1", 1);
[ 087350398e8b2c5d4b39f051b23a2e533f4d830b Junio C Hamano Merge branch 'nr/git-cd-to-a-directory' ]

			if (envchanged)
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]

				*envchanged
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]
 =
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
 1
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]
;
[ 43885c2a557871aedcbb1a412fc18e98c3dd1dc4 Junio C Hamano rename internal format-patch wip ]

		}
[ 27344d6a6c8056664966e11acf674e5da6dd7ee3 Jeff King git: add --no-optional-locks option ]
 else if (!strcmp(cmd
[ 43885c2a557871aedcbb1a412fc18e98c3dd1dc4 Junio C Hamano rename internal format-patch wip ]
,
[ 27344d6a6c8056664966e11acf674e5da6dd7ee3 Jeff King git: add --no-optional-locks option ]
 "--no-optional-locks")) {
			setenv(GIT_OPTIONAL_LOCKS_ENVIRONMENT, "0", 1);
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			if (envchanged)
				*envchanged = 1;
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]

		} else if (!strcmp(cmd, "--shallow-file")) {
			(
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]
*
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
argv)++;
			(
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]
*
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
argc
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]
)
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
--;
			set_alternate_shallow_file(
[ 00624d608cc69bd62801c93e74d1ea7a7ddd6598 Junio C Hamano Merge branch 'sb/object-store-grafts' ]
the_repository,
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
 (*argv)[0]
[ 069c053222bfc62a6522430a137e9b2c7ff36e4c Nguyễn Thái Ngọc Duy add GIT_SHALLOW_FILE to propagate --shallow-file to subprocesses ]
, 1
[ 6035d6aad8ca11954c0d7821f6f3e7c047039c8f Nguyễn Thái Ngọc Duy fetch-pack: prepare updated shallow file before fetching the pack ]
);
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			if (envchanged)
				*envchanged = 1;
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]

		} else if (!strcmp(cmd, "-C")) {
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			if (*argc < 2) {
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]

				fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]
"no directory given for -C\n" )
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]
;
				usage(git_usage_string);
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

			}
[ 6a536e2076f02a98e0d6403ff68f3acf717fa1c4 Karthik Nayak git: treat "git -C '<path>'" as a no-op when <path> is empty ]

			if ((*argv)[1][0]) {
[ 44e1e4d67d5148c245db362cc48c3cc6c2ec82ca Nazri Ramliy git: run in a directory given with -C option ]

				if (chdir((*argv)[1]))
					die_errno("cannot change to '%s'", (*argv)[1]);
[ 27344d6a6c8056664966e11acf674e5da6dd7ee3 Jeff King git: add --no-optional-locks option ]

				if (envchanged)
					*envchanged = 1;
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

			}
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			(*argv)++;
			(*argc)--;
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]

		} else
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]
 if (skip_prefix(cmd, "--list-cmds=", &cmd)) {
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			trace2_cmd_name("_query_");
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]

			if (!strcmp(cmd, "
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
parseopt")) {
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]

				struct string_list list = STRING_LIST_INIT_DUP
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
;
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]

				int i;
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]


				list_builtins(
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
&list,
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 NO_PARSEOPT
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

				for (i = 0;
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
 i < list.nr; i++)
					printf("%s "
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
,
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
 list.items[i].string);
				string_list_clear(&list, 0
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
);
[ f2dd8c3799ddbd7df63a89a9043916f8545a70a3 Jon Seymour git: add --info-path and --man-path options ]

				exit(
[ 7cf16a14f5c070f7b14cf28023769450133172ae Michael J Gruber handle_alias: provide GIT_PREFIX to !alias ]
0);
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

			} else {
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]

				exit(
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]
list_cmds(cmd)
[ a1bea2c1fc5e5243e873919248940dd5fff593a4 Josh Triplett ref namespaces: infrastructure ]
);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

			}
[ 0089521cacd99db8018b7a31e205dad0bf0738c7 Nguyễn Thái Ngọc Duy git.c: convert --list-* to --list-cmds=* ]

		} else {
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

			fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
"unknown option: %s
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
\n
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
"
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
, cmd);
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]

			usage(git_usage_string);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

		}
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]


		(*argv)++;
		(*argc)--;
[ da6bf70ebf7d485e3643ba3569962a4c08e37906 Andreas Ericsson git: grok 'help' to mean '--help'. ]

	}
[ 73546c085d49694c5e54b421f80bde6bc25006fb Junio C Hamano handle_options(): do not miscount how many arguments were used ]

	return
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
 (*argv)
[ 73546c085d49694c5e54b421f80bde6bc25006fb Junio C Hamano handle_options(): do not miscount how many arguments were used ]
 - orig
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
_argv;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]


static int handle_alias(int *argcp, const char ***argv)
[ 97fc6c5fbacc2181319bbd7e2faa8ac04476f862 Andreas Ericsson git --help COMMAND brings up the git-COMMAND man-page. ]

{
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]

	int
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
 envchanged
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
 = 0, ret = 0
[ 47e5c0ca2cabb406518dda5c09432dc996f7ef2b Johannes Schindelin Save errno in handle_alias() ]
, saved_errno = errno
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
;
	int count
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
, option_count;
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]

	const char **new_argv;
	const char *alias_command;
	char *alias_string;

	alias_command = (*argv)[0];
	alias_
[ 94351118c0a820002b093598e7fac5bdf3c0291f Jeff King make alias lookup a public, procedural function ]
string = alias_lookup
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
(alias_command);
	if (alias_string) {
[ a9a60b94ccda5ff25faf51f39faeac11cac68346 Rasmus Villemoes git.c: handle_alias: prepend alias info when first argument is -h ]

		if (*argcp > 1 && !strcmp((*argv)[1], "
[ 53bbcfbde7c29611f16722c3fbcdb2b78718f633 Alban Gruin rebase -i: implement the main part of interactive rebase as a builtin ]
-
[ a9a60b94ccda5ff25faf51f39faeac11cac68346 Rasmus Villemoes git.c: handle_alias: prepend alias info when first argument is -h ]
h"))
			fprintf
[ 53bbcfbde7c29611f16722c3fbcdb2b78718f633 Alban Gruin rebase -i: implement the main part of interactive rebase as a builtin ]
_
[ a9a60b94ccda5ff25faf51f39faeac11cac68346 Rasmus Villemoes git.c: handle_alias: prepend alias info when first argument is -h ]
ln(stderr,
[ 53bbcfbde7c29611f16722c3fbcdb2b78718f633 Alban Gruin rebase -i: implement the main part of interactive rebase as a builtin ]
 _
[ a9a60b94ccda5ff25faf51f39faeac11cac68346 Rasmus Villemoes git.c: handle_alias: prepend alias info when first argument is -h ]
("'%s' is aliased to '%s'"),
				   alias_command, alias_string);
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]

		if (alias_string[0] == '!') {
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]

			struct child
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
_
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
process child = CHILD_PROCESS_INIT;
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]

			int nongit_ok;

			/
[ f655651e09b9fa7bf8ff13f1b4a5b16c7956e4cf Junio C Hamano Merge branch 'rs/strbuf-getcwd' ]
*
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
 Aliases expect GIT
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
_
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
PREFIX,
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
 GIT_DIR
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
 etc to be set
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
 *
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
/
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]

			setup_git_directory_gently(
[ e85dc0a3c7a3f4f8d5aade83fd340b8df73471cd Junio C Hamano Accept git aliases outside a git repository ]
&
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
nongit
[ e85dc0a3c7a3f4f8d5aade83fd340b8df73471cd Junio C Hamano Accept git aliases outside a git repository ]
_
[ a9bcf6586d1a4888aea91553d73cda20494b8335 Johannes Schindelin alias: use the early config machinery to expand aliases ]
ok
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
);
[ 030149a4dcd584f6b47221f5b087d081e582d790 Jonathan Nieder git --paginate: paginate external commands again ]


			commit_pager_choice();
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]


			child.use_shell = 1;
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			child.trace2_child_class = "shell_alias";
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]

			argv
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
_array_push(&child.args
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
,
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
 alias_string + 1
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
)
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]
;
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]

			argv_array_pushv
[ a2f8028d3d661b314d5a784764f2f5f9e4c2dde0 Johannes Schindelin Make '!' aliases more useful ]
(
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
&child.args,
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]
 (*argv)
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
 + 1)
[ 1f9a980636d39c08c1cf1c13a6e6584d9d039e0e Junio C Hamano Merge branch 'jk/maint-config-alias-fix' ]
;
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]


			trace2_cmd_alias(alias_command, child.args.argv);
			trace2_cmd_list_config();
			trace2_cmd_name("_run_shell_alias_");
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]


			ret = run_command(
[ 850d2fec53ee188bab9e458f77906041ac7f1904 Jeff King convert manual allocations to argv_array ]
&child
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
);
			if (ret >= 0
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
)   /* normal exit */
				exit
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
(ret);

			die
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
_errno
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
("
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
while
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
 expanding alias '%s'
[ 7f51f8bc2b9d0556f2fbe20056e8fc8839766c99 Erik Faye-Lund alias: use run_command api to execute aliases ]
: '%s'
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ dfd42a3c6281275b518f10938dcd858558cd82e3 Theodore Ts'o Allow aliases to expand to shell commands ]
,
				  alias_command, alias_string + 1);
[ 97fc6c5fbacc2181319bbd7e2faa8ac04476f862 Andreas Ericsson git --help COMMAND brings up the git-COMMAND man-page. ]

		}
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]

		count = split_cmdline(alias_string, &new_argv);
[ dc4179f9a76473176eb473f6f568b0006c823fba Deskin Miller maint: check return of split_cmdline to avoid bad config strings ]

		if (count <
[ d75307084da5f89329de190bb9b4a3196cec1d0e Alexander Potashev remove trailing LF in die() messages ]
 0
[ dc4179f9a76473176eb473f6f568b0006c823fba Deskin Miller maint: check return of split_cmdline to avoid bad config strings ]
)
			die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ dc4179f9a76473176eb473f6f568b0006c823fba Deskin Miller maint: check return of split_cmdline to avoid bad config strings ]
("bad alias.%s string
[ ad9ac6db5d58de08d0497b9184e86926377c20dd Greg Brockman split_cmdline: Allow caller to access error string ]
: %s
[ dc4179f9a76473176eb473f6f568b0006c823fba Deskin Miller maint: check return of split_cmdline to avoid bad config strings ]
"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ dc4179f9a76473176eb473f6f568b0006c823fba Deskin Miller maint: check return of split_cmdline to avoid bad config strings ]
, alias
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
_
[ d75307084da5f89329de190bb9b4a3196cec1d0e Alexander Potashev remove trailing LF in die() messages ]
command
[ ad9ac6db5d58de08d0497b9184e86926377c20dd Greg Brockman split_cmdline: Allow caller to access error string ]
,
[ a7412ae1342b09f16d659d75da5d25f137800a60 Nguyễn Thái Ngọc Duy alias.c: mark split_cmdline_strerror() strings for translation ]

			    _(
[ ad9ac6db5d58de08d0497b9184e86926377c20dd Greg Brockman split_cmdline: Allow caller to access error string ]
split_cmdline_strerror(count)
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
)
[ a7412ae1342b09f16d659d75da5d25f137800a60 Nguyễn Thái Ngọc Duy alias.c: mark split_cmdline_strerror() strings for translation ]
)
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
;
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]

		option_count = handle_options(&new_argv, &count
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
, &envchanged);
		if (envchanged)
			die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
("alias '%s' changes environment variables
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
.
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
\n"
			      "You can use '!git' in the alias to do this"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
,
			    alias_command
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
);
		memmove(new_argv - option_count, new_argv,
				count * sizeof(char *));
		new_argv -= option_count;
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]


		if (count < 1)
			die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
("empty alias for %s"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
, alias_command);

		if (!strcmp(alias_command, new_argv[0]))
			die(
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
_(
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
"recursive alias: %s"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
, alias_command);
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]


		trace_argv_printf
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
(
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]
new
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
_
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]
argv,
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]

				  "
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
trace: alias expansion: %s =>
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]
",
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]

				  alias
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]
_
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
command);
[ 2756ca4347cbda05b16954cd7f445c216b935e76 René Scharfe use REALLOC_ARRAY for changing the allocation size of arrays ]


		REALLOC
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
_
[ 2756ca4347cbda05b16954cd7f445c216b935e76 René Scharfe use REALLOC_ARRAY for changing the allocation size of arrays ]
ARRAY
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
(new_argv, count + *argcp);
		/* insert after command name */
		memcpy(new_argv + count, *argv
[ d8498500ba5cf348577202e0bb7810cbd68fa120 Junio C Hamano fix git alias ]
 + 1
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
, sizeof(char *) * *argcp);
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]


		trace2_cmd_alias(alias_command, new_argv);
		trace2_cmd_list_config();
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]


		*argv = new_argv;
		*argcp += count - 1;

		ret = 1;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	}
[ 47e5c0ca2cabb406518dda5c09432dc996f7ef2b Johannes Schindelin Save errno in handle_alias() ]


	errno = saved_errno;
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]


	return ret;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]


static int run
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
_
[ f172f334fde49ce29d0afa21749bf85463a2db9a Jeff King git: s/run_command/run_builtin/ ]
builtin
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
(struct cmd_struct *p
[ 96c48153c9a2905fb2f1d588c11e36272635cb79 Junio C Hamano Merge branch 'ml/worktree' ]
, int
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
 argc, const char *
[ 96c48153c9a2905fb2f1d588c11e36272635cb79 Junio C Hamano Merge branch 'ml/worktree' ]
*
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
argv)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]

	int status
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
, help;
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

	struct stat st;
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]

	const char *prefix;

	prefix = NULL;
[ 783cfafb91538c178d78a9f6c7b609e4f06582f8 Junio C Hamano Merge branch 'cc/replace' ]

	help = argc == 2 && !strcmp(argv[1], "-h")
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
;
[ 96c48153c9a2905fb2f1d588c11e36272635cb79 Junio C Hamano Merge branch 'ml/worktree' ]

	if
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
 (
[ 99caeed05d3e89176d352104a2b70a77aa7e5d81 Jonathan Nieder Let 'git <command> -h' show usage without a git dir ]
!help) {
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]

		if (p->
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
option &
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
)
			prefix = setup_git_directory();
[ 27bd38d4e5a44da233a9e7d01c6a518aba355297 Luis R. Rodriguez git.c: treat RUN_SETUP_GENTLY and RUN_SETUP as mutually exclusive ]

		else
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]
 if (p->option & RUN_SETUP_GENTLY) {
			int nongit_ok;
			prefix = setup_git_directory_gently(&nongit_ok);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

		}
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]


		if (use_pager == -1 &&
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
 p->option &
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]
 (
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
RUN
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
_SETUP
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]
 | RUN_SETUP_GENTLY
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
)
[ c409824cc2abac46e06091fcb29639b048d23b5d Martin Ågren git.c: let builtins opt for handling `pager.foo` themselves ]
 &&
		    !(p->option & DELAY_PAGER_CONFIG
[ ee38dfb89ef88a3e4e6818b7cfe31d122a1c640d Nguyễn Thái Ngọc Duy git wrapper: allow setup_git_directory_gently() be called earlier ]
)
[ c409824cc2abac46e06091fcb29639b048d23b5d Martin Ågren git.c: let builtins opt for handling `pager.foo` themselves ]
)
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

			use
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
_pager
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
 = check_pager_config(p->cmd);
		if (use_pager == -1 && p->option & USE_PAGER)
			use_pager = 1;
[ f3bb8b4b8452f1b7add220e787ef56c737ceff6a Junio C Hamano Merge branch 'nd/setup' ]


		if ((p->option & (RUN_SETUP | RUN_SETUP_GENTLY)) &&
		    startup_info->have_repository) /* get_git_dir() may set up repo, avoid that */
			trace_repo_setup(prefix);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	}
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	commit_pager_choice();
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]


	if (!help && get_super_prefix()) {
		if (!(p->option & SUPPORT_SUPER_PREFIX))
			die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
("%s doesn't support --super-prefix"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
, p->cmd);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

	}
[ 783cfafb91538c178d78a9f6c7b609e4f06582f8 Junio C Hamano Merge branch 'cc/replace' ]


	if (!help &&
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
 p
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
-
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
>option &
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
 NEED
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
_
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
WORK
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
_
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
TREE
[ 96c48153c9a2905fb2f1d588c11e36272635cb79 Junio C Hamano Merge branch 'ml/worktree' ]
)
[ 59f0f2f33a420e9a14bb8cef20d38f508f0d098e Mike Hommey Refactor working tree setup ]

		setup
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
work_tree
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
()
[ e90fdc39b6903502192b2dd11e5503cea721a1ad Johannes Schindelin Clean up work-tree handling ]
;
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]


	trace
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
_argv
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]
_printf
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
(
[ 6ce4e61f1be690681f6494eb5ca26540c2316f81 Christian Couder Trace into a file or an open fd and refactor tracing code. ]
argv
[ 575ba9d69d5dfd07d95343fe946a5991c4cb27d6 Matthias Lederhofer GIT_TRACE: show which built-in/external commands are executed ]
, "trace: built-in: git");
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

	trace2_cmd_name(p->cmd);
	trace2_cmd_list_config();
[ 8616a2d0cb57865540f1c00ac2e5385a6cc5d84e Jameson Miller block alloc: add validations around cache_entry lifecyle ]


	validate
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]
_
[ 8616a2d0cb57865540f1c00ac2e5385a6cc5d84e Jameson Miller block alloc: add validations around cache_entry lifecyle ]
cache_entries(the
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]
_
[ f8adbec9feaa7a1ab9814db1115826e87033712e Nguyễn Thái Ngọc Duy cache.h: flip NO_THE_INDEX_COMPATIBILITY_MACROS switch ]
repository->
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]
index
[ 8616a2d0cb57865540f1c00ac2e5385a6cc5d84e Jameson Miller block alloc: add validations around cache_entry lifecyle ]
);
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]

	status =
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]
 p->fn(argc, argv, prefix);
[ 8616a2d0cb57865540f1c00ac2e5385a6cc5d84e Jameson Miller block alloc: add validations around cache_entry lifecyle ]

	validate_cache_entries(the_
[ f8adbec9feaa7a1ab9814db1115826e87033712e Nguyễn Thái Ngọc Duy cache.h: flip NO_THE_INDEX_COMPATIBILITY_MACROS switch ]
repository->
[ 8616a2d0cb57865540f1c00ac2e5385a6cc5d84e Jameson Miller block alloc: add validations around cache_entry lifecyle ]
index);
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]


	if (status)
		return status;

	/* Somebody closed stdout? */
	if (fstat(fileno(stdout), &st))
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

		return 0;
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]

	/* Ignore write errors for pipes and sockets.. */
	if (S_ISFIFO(st.st_mode) || S_ISSOCK(st.st_mode))
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]

		return 0;
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]


	/* Check for ENOSPC and EIO errors.. */
[ 0227f9887bcc158dcd22ac4f60e5e428b259dd2d Linus Torvalds git: Try a bit harder not to lose errno in stdio ]

	if (fflush(stdout))
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]

		die
[ d824cbba02a4061400a0e382f9bd241fbbff34f0 Thomas Rast Convert existing die(..., strerror(errno)) to die_errno() ]
_errno
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
("write failure on standard output")
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
;
	if (ferror(stdout))
		die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
("
[ 0227f9887bcc158dcd22ac4f60e5e428b259dd2d Linus Torvalds git: Try a bit harder not to lose errno in stdio ]
unknown
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
 write failure on standard output")
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 0f157315a1020fce76fe2c5a703e40684b9b1699 Linus Torvalds Check for IO errors after running a command ]
;
	if (fclose(stdout))
[ 0227f9887bcc158dcd22ac4f60e5e428b259dd2d Linus Torvalds git: Try a bit harder not to lose errno in stdio ]

		die
[ d824cbba02a4061400a0e382f9bd241fbbff34f0 Thomas Rast Convert existing die(..., strerror(errno)) to die_errno() ]
_errno
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 0227f9887bcc158dcd22ac4f60e5e428b259dd2d Linus Torvalds git: Try a bit harder not to lose errno in stdio ]
("close failed on standard output")
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 0227f9887bcc158dcd22ac4f60e5e428b259dd2d Linus Torvalds git: Try a bit harder not to lose errno in stdio ]
;
[ 3eefc189172b88dece6fb6d479b3ed13cc483dbc Junio C Hamano Tentative built-in format-patch. ]

	return 0;
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

}
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


static struct cmd_struct commands[] = {
[ 0d78153952e70c21e94dc6b7eefcb2ac5337a902 Linus Torvalds Do "git add" as a builtin ]

	{ "add", cmd_add
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
 |
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
 NEED
[ 71dfbf224ff980f4085f75868dc409118418731e Junio C Hamano Make merge-base a built-in. ]
_
[ 0305b636542c8c137ed7c82fee90db8d3621118c Junio C Hamano Merge branch 'ei/worktree+filter' ]
WORK_TREE
[ 71dfbf224ff980f4085f75868dc409118418731e Junio C Hamano Make merge-base a built-in. ]
 },
[ 5135d1c3d2a2c8c6c9701bd0cbcf57ce587f750d Junio C Hamano Merge branch 'nd/clear-gitenv-upon-use-of-alias' ]

	{ "am", cmd_am, RUN_SETUP | NEED_WORK_TREE },
[ f789e347465dded7fcec3a605473fa3f549792d8 Ryan Anderson Remove git-annotate.perl and create a builtin-alias for git-blame ]

	{ "annotate", cmd_annotate,
[ 5b6dedd6a0b7566f7e8466b6aefe8f019c52f5d3 Junio C Hamano annotate: make it work from subdirectories. ]
 RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ f789e347465dded7fcec3a605473fa3f549792d8 Ryan Anderson Remove git-annotate.perl and create a builtin-alias for git-blame ]
 },
[ ac6245e31a359200b65bfdd910bba9a0fbe90c11 Peter Eriksen Builtin git-apply. ]

	{ "apply", cmd_apply
[ d1ea896290629185dc0bf4efa3469b410bd41313 Nguyễn Thái Ngọc Duy apply: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ ac6245e31a359200b65bfdd910bba9a0fbe90c11 Peter Eriksen Builtin git-apply. ]
 }
[ 51ce34b9923d9b119ac53414584f80e05520abea Peter Eriksen Builtin git-show-branch. ]
,
[ c91f0d92efb36d7b349f586cafafaf0e6ac3f5b2 Jeff King git-commit.sh: convert run_status to a C builtin ]

	{ "
[ 4df096a5ca24f2f39042c51cf51b8a2bec66a2b5 Franck Bui-Huu Add git-archive ]
archive
[ c91f0d92efb36d7b349f586cafafaf0e6ac3f5b2 Jeff King git-commit.sh: convert run_status to a C builtin ]
", cmd_
[ 4df096a5ca24f2f39042c51cf51b8a2bec66a2b5 Franck Bui-Huu Add git-archive ]
archive
[ eb0224c617ba6b4299f2a9f85d6c4b3b5e10abc0 Junio C Hamano archive: read local configuration ]
, RUN_SETUP_GENTLY
[ c91f0d92efb36d7b349f586cafafaf0e6ac3f5b2 Jeff King git-commit.sh: convert run_status to a C builtin ]
 },
[ 1bf072e3661eeef8d9721079a332e804b5678c7e Christian Couder bisect--helper: implement "git bisect--helper" ]

	{ "bisect
[ 6e353a5e5de9da021c7c6c0bc2dc5f95a39900a1 Junio C Hamano Merge branch 'cc/bisect-filter' ]
--
[ 1bf072e3661eeef8d9721079a332e804b5678c7e Christian Couder bisect--helper: implement "git bisect--helper" ]
helper", cmd_bisect__helper, RUN_SETUP
[ 6e353a5e5de9da021c7c6c0bc2dc5f95a39900a1 Junio C Hamano Merge branch 'cc/bisect-filter' ]
 },
[ 24ad8e0ce23d08d28a5d664ab6164b10125146ce Junio C Hamano Merge branch 'jc/pickaxe' ]

	{ "
[ acca687fa9db8eaa380b65d63c3f0d4364892acf Junio C Hamano git-pickaxe: retire pickaxe ]
blame
[ 24ad8e0ce23d08d28a5d664ab6164b10125146ce Junio C Hamano Merge branch 'jc/pickaxe' ]
", cmd_
[ acca687fa9db8eaa380b65d63c3f0d4364892acf Junio C Hamano git-pickaxe: retire pickaxe ]
blame
[ 24ad8e0ce23d08d28a5d664ab6164b10125146ce Junio C Hamano Merge branch 'jc/pickaxe' ]
, RUN_SETUP },
[ cee7f245dcaef6dade28464f59420095a9949aac Junio C Hamano git-pickaxe: blame rewritten. ]

	{ "
[ c31820c26b8f164433e67d28c403ca0df0316055 Lars Hjemli Make git-branch a builtin ]
branch
[ cee7f245dcaef6dade28464f59420095a9949aac Junio C Hamano git-pickaxe: blame rewritten. ]
", cmd_
[ c31820c26b8f164433e67d28c403ca0df0316055 Lars Hjemli Make git-branch a builtin ]
branch
[ 1da1b3a3e06fdcbbd0b154a6930fc0261a5ee866 Junio C Hamano branch: work in subdirectories. ]
, RUN_SETUP
[ d74b541e0b40be0bf35e836bd8c6cbf653283d4b Martin Ågren branch: respect `pager.branch` in list-mode only ]
 | DELAY_PAGER_CONFIG
[ cee7f245dcaef6dade28464f59420095a9949aac Junio C Hamano git-pickaxe: blame rewritten. ]
 },
[ 4a164d48df6bb1b4a771741c63d4437fd2dca0bb Junio C Hamano Merge branch 'jc/merge-base' (early part) ]

	{ "
[ 2e0afafebd8c5a1a8cdddb0714073461229ecfef Johannes Schindelin Add git-bundle: move objects and references by archive ]
bundle
[ 4a164d48df6bb1b4a771741c63d4437fd2dca0bb Junio C Hamano Merge branch 'jc/merge-base' (early part) ]
", cmd_
[ 2e0afafebd8c5a1a8cdddb0714073461229ecfef Johannes Schindelin Add git-bundle: move objects and references by archive ]
bundle
[ 2cb60093e6c6b53cfc8ffe75f697386a1adab778 Nguyễn Thái Ngọc Duy bundle: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 4a164d48df6bb1b4a771741c63d4437fd2dca0bb Junio C Hamano Merge branch 'jc/merge-base' (early part) ]
 },
[ f81daefe56b3c97b93a851e1ada14eeca0dea47a Timo Hirvonen Builtin git-cat-file ]

	{ "cat-file", cmd_cat_file
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ f81daefe56b3c97b93a851e1ada14eeca0dea47a Timo Hirvonen Builtin git-cat-file ]
 }
[ 895f10c3b596ef955c7f252717e5b4668530c569 Christian Couder Builtin git-rev-parse. ]
,
[ d0bfd026a8241d544c339944976927b388d61a5e Junio C Hamano Add basic infrastructure to assign attributes to paths ]

	{ "check-attr", cmd_check_attr, RUN_SETUP },
[ e30b2feb1b50c2d14d32dc3e6e41f7b20a677ff2 Javier Roucher Iglesias add 'git credential' plumbing command ]

	{ "
[ 368aa52952deb631b38a89837c4abbb00c5261c1 Adam Spiers add git-check-ignore sub-command ]
check-ignore
[ e30b2feb1b50c2d14d32dc3e6e41f7b20a677ff2 Javier Roucher Iglesias add 'git credential' plumbing command ]
", cmd_
[ 368aa52952deb631b38a89837c4abbb00c5261c1 Adam Spiers add git-check-ignore sub-command ]
check_ignore
[ e30b2feb1b50c2d14d32dc3e6e41f7b20a677ff2 Javier Roucher Iglesias add 'git credential' plumbing command ]
, RUN_SETUP
[ 368aa52952deb631b38a89837c4abbb00c5261c1 Adam Spiers add git-check-ignore sub-command ]
 | NEED
[ e30b2feb1b50c2d14d32dc3e6e41f7b20a677ff2 Javier Roucher Iglesias add 'git credential' plumbing command ]
_
[ 368aa52952deb631b38a89837c4abbb00c5261c1 Adam Spiers add git-check-ignore sub-command ]
WORK_TREE
[ e30b2feb1b50c2d14d32dc3e6e41f7b20a677ff2 Javier Roucher Iglesias add 'git credential' plumbing command ]
 },
[ 226ad3482ac506af0eadd04e732dda556fda80e4 Eric Sunshine builtin: add git-check-mailmap command ]

	{ "check-mailmap", cmd_check_mailmap, RUN_SETUP },
[ 9370bae2cef351617272aa142fbe4ce039833d13 Lukas Sandström Make git-check-format-ref a builtin. ]

	{ "check-ref-format", cmd_check_ref_format
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ 9370bae2cef351617272aa142fbe4ce039833d13 Lukas Sandström Make git-check-format-ref a builtin. ]
  }
[ 0864f26421b3c599b462bc867de948d14b268d76 Peter Eriksen Builtin git-ls-files. ]
,
[ 782c2d65c24066a5d83453efb52763bc34c10f81 Daniel Barkalow Build in checkout ]

	{ "checkout", cmd_checkout, RUN_SETUP | NEED_WORK_TREE },
[ e414156ab6e7869b29622ee3439e3c91361f5b0e Junio C Hamano Make git-checkout-index a builtin ]

	{ "checkout-index", cmd_checkout_index,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]

		RUN
[ e414156ab6e7869b29622ee3439e3c91361f5b0e Junio C Hamano Make git-checkout-index a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 4465f410d6a8fa7abc5436aac6f58196f2b618d8 Johannes Schindelin checkout-index needs a working tree ]
 | NEED_WORK_TREE
[ e414156ab6e7869b29622ee3439e3c91361f5b0e Junio C Hamano Make git-checkout-index a builtin ]
},
[ 56532fa147d56057ad4121f5ccea8e254748afdd Junio C Hamano Merge branch 'rs/cherry' ]

	{ "cherry", cmd_cherry, RUN_SETUP },
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]

	{ "cherry-pick", cmd_cherry_pick, RUN_SETUP |
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
 NEED
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
WORK_TREE
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]
 },
[ 113f10f22f4b3b599e44e192e241e0bace9cc39e Shawn Bohrer Make git-clean a builtin ]

	{ "clean", cmd_clean, RUN_SETUP | NEED_WORK_TREE },
[ 8434c2f1afedb936e0ea8c07ce25733013c2f743 Daniel Barkalow Build in clone ]

	{ "clone", cmd_clone },
[ 7e29b8254f08af820b2f0c3770836638ffe517ab Nguyễn Thái Ngọc Duy Add column layout skeleton and git-column ]

	{ "column", cmd
[ f4ed0af6e2762bc43de474d1fcaa2863b00268eb Junio C Hamano Merge branch 'nd/columns' ]
_
[ 7e29b8254f08af820b2f0c3770836638ffe517ab Nguyễn Thái Ngọc Duy Add column layout skeleton and git-column ]
column, RUN_SETUP_GENTLY },
[ b467fb0b909883f28c4653361ccfa530ccf1a03e Junio C Hamano Merge branch 'jk/diff' ]

	{ "
[ f5bbc3225c4b073a7ff3218164a0c820299bc9c6 Kristian Høgsberg Port git commit to C. ]
commit
[ b467fb0b909883f28c4653361ccfa530ccf1a03e Junio C Hamano Merge branch 'jk/diff' ]
", cmd_
[ f5bbc3225c4b073a7ff3218164a0c820299bc9c6 Kristian Høgsberg Port git commit to C. ]
commit
[ b467fb0b909883f28c4653361ccfa530ccf1a03e Junio C Hamano Merge branch 'jk/diff' ]
, RUN_SETUP
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
 |
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
 NEED
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
WORK_TREE
[ b467fb0b909883f28c4653361ccfa530ccf1a03e Junio C Hamano Merge branch 'jk/diff' ]
 },
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]

	{ "
[ 4ce58ee38de3ab0955b94946bfc339f387227223 Derrick Stolee commit-graph: create git-commit-graph builtin ]
commit
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
-
[ 4ce58ee38de3ab0955b94946bfc339f387227223 Derrick Stolee commit-graph: create git-commit-graph builtin ]
graph
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
", cmd_
[ 4ce58ee38de3ab0955b94946bfc339f387227223 Derrick Stolee commit-graph: create git-commit-graph builtin ]
commit_graph
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, RUN_
[ 4ce58ee38de3ab0955b94946bfc339f387227223 Derrick Stolee commit-graph: create git-commit-graph builtin ]
SETUP }
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
,
[ 6d96ac18e52aca19ff1087ffa64e2d616cc75c6f Peter Eriksen Builtin git-commit-tree. ]

	{ "commit-tree", cmd_commit_tree
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 6d96ac18e52aca19ff1087ffa64e2d616cc75c6f Peter Eriksen Builtin git-commit-tree. ]
 }
[ ac6245e31a359200b65bfdd910bba9a0fbe90c11 Peter Eriksen Builtin git-apply. ]
,
[ e0d10e1c63bc52b37bbec99b07deee794058d9b4 Tom Prince [PATCH] Rename git-repo-config to git-config. ]

	{ "config", cmd_config
[ 3ba7e6e29afd67e69ff5963d8ed76728824959a0 Nguyễn Thái Ngọc Duy config: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ 32888b8fd56175f52f3139915d931f78d8c4ef89 Martin Ågren config: respect `pager.config` in list/get-mode only ]
 | DELAY_PAGER_CONFIG
[ e0d10e1c63bc52b37bbec99b07deee794058d9b4 Tom Prince [PATCH] Rename git-repo-config to git-config. ]
 },
[ d820f918711446a74cc74577f6f2535a78752708 Junio C Hamano Merge branch 'jc/count' ]

	{ "count-objects", cmd_count_objects
[ 8112894d82637c199294702942cac477b756b678 Dmitry V. Levin Make count-objects, describe and merge-tree work in subdirectory ]
, RUN_SETUP
[ d820f918711446a74cc74577f6f2535a78752708 Junio C Hamano Merge branch 'jc/count' ]
 },
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	{ "
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
credential
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
",
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
 cmd_credential
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
,
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
 RUN
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
_
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
SETUP
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
_
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ a39b15b4f6a3f08b67b17d968935d177821e680f Junio C Hamano Merge branch 'as/check-ignore' ]
 }
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
,
[ e861ce1692fa9809f3e7b898804f8ddaf7cd8975 Junio C Hamano Merge branch 'jc/bare' ]

	{ "describe", cmd_describe, RUN_SETUP },
[ c74320872b445104fe5c265e60785d9d26d94cc5 Junio C Hamano built-in count-objects. ]

	{ "
[ 8ab99476ec2298a43e94949e0bb7aa5125793a28 Junio C Hamano builtin-diff: call it "git-diff", really. ]
diff
[ c74320872b445104fe5c265e60785d9d26d94cc5 Junio C Hamano built-in count-objects. ]
", cmd_
[ 8ab99476ec2298a43e94949e0bb7aa5125793a28 Junio C Hamano builtin-diff: call it "git-diff", really. ]
diff
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ c74320872b445104fe5c265e60785d9d26d94cc5 Junio C Hamano built-in count-objects. ]
 },
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]

	{ "diff-files", cmd_diff_files
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 4f38f6b5bafb1f7f85c7b54d0bb0a0e977cd947c Nguyễn Thái Ngọc Duy diff*: fix worktree setup ]
 | NEED_WORK_TREE
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
 },
	{ "diff-index", cmd_diff_index
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
 },
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]

	{ "
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
diff
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
-
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
tree
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
", cmd_diff_tree,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
 }
[ f81daefe56b3c97b93a851e1ada14eeca0dea47a Timo Hirvonen Builtin git-cat-file ]
,
[ b7786bb4b09463641f3e39eca18aefc630ee4f38 Junio C Hamano Merge branch 'js/difftool-builtin' ]

	{ "difftool", cmd_difftool, RUN_SETUP_
[ b72e90712eb0e802b232ad4c88460d04279c7111 Junio C Hamano Merge branch 'js/difftool-no-index' ]
GENTLY
[ b7786bb4b09463641f3e39eca18aefc630ee4f38 Junio C Hamano Merge branch 'js/difftool-builtin' ]
 },
[ f2dc849e9c5fe363ad089f6c3f2b7b3d79fd6a6f Johannes Schindelin Add 'git fast-export', the sister of 'git fast-import' ]

	{ "fast-export", cmd_fast_export, RUN_SETUP },
[ b888d61c8308027433df9c243fa551f42db1c76a Daniel Barkalow Make fetch a builtin ]

	{ "fetch", cmd_fetch, RUN_SETUP },
[ 2d4177c01c238071777db5b1fbd8a14efb62ce02 Daniel Barkalow Make fetch-pack a builtin with an internal API ]

	{ "fetch-pack", cmd_fetch_pack, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 2d4177c01c238071777db5b1fbd8a14efb62ce02 Daniel Barkalow Make fetch-pack a builtin with an internal API ]
 },
[ 00449f992b629f7f7884fb2cf46ff411a2a4f381 Johannes Schindelin Make git-fmt-merge-msg a builtin ]

	{ "fmt-merge-msg", cmd_fmt_merge_msg
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 00449f992b629f7f7884fb2cf46ff411a2a4f381 Johannes Schindelin Make git-fmt-merge-msg a builtin ]
 }
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
,
[ 358ddb62cfd03bba1ca2f1ae8e81b9510f42ea9a Linus Torvalds Add "git show-ref" builtin command ]

	{ "
[ 9f613ddd21cbd05bfc139d9b1551b5780aa171f6 Junio C Hamano Add git-for-each-ref: helper for language bindings ]
for-each
[ 358ddb62cfd03bba1ca2f1ae8e81b9510f42ea9a Linus Torvalds Add "git show-ref" builtin command ]
-ref", cmd_
[ 9f613ddd21cbd05bfc139d9b1551b5780aa171f6 Junio C Hamano Add git-for-each-ref: helper for language bindings ]
for_each
[ 358ddb62cfd03bba1ca2f1ae8e81b9510f42ea9a Linus Torvalds Add "git show-ref" builtin command ]
_ref, RUN_SETUP },
[ 3eefc189172b88dece6fb6d479b3ed13cc483dbc Junio C Hamano Tentative built-in format-patch. ]

	{ "format-patch", cmd_format_patch,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 230f544e877641666f8c3718ac4563294c2b305e Junio C Hamano Merge branch 'jc/diff' ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
 },
[ b4dfefe00f7035140b7a10e855a665c1347cacd6 Mark Wooding Make fsck and fsck-objects be builtins. ]

	{ "fsck", cmd_fsck, RUN_SETUP },
	{ "fsck-objects", cmd_fsck, RUN_SETUP },
[ 6757ada403bf0eb0fb1fddcffbbeb74d91cbbb51 James Bowes Make gc a builtin. ]

	{ "gc", cmd_gc, RUN_SETUP },
[ f2054be4c4816d8c363dc867f462bc0af9031c02 Junio C Hamano Merge branch 'jc/builtin-n-tar-tree' ]

	{ "
[ 52ba03cbb1c718093946f5254187082bd7b32845 Rene Scharfe Built-in git-get-tar-commit-id ]
get-
[ f2054be4c4816d8c363dc867f462bc0af9031c02 Junio C Hamano Merge branch 'jc/builtin-n-tar-tree' ]
tar-
[ 52ba03cbb1c718093946f5254187082bd7b32845 Rene Scharfe Built-in git-get-tar-commit-id ]
commit-id
[ f2054be4c4816d8c363dc867f462bc0af9031c02 Junio C Hamano Merge branch 'jc/builtin-n-tar-tree' ]
", cmd_
[ 52ba03cbb1c718093946f5254187082bd7b32845 Rene Scharfe Built-in git-get-tar-commit-id ]
get_
[ f2054be4c4816d8c363dc867f462bc0af9031c02 Junio C Hamano Merge branch 'jc/builtin-n-tar-tree' ]
tar_
[ 52ba03cbb1c718093946f5254187082bd7b32845 Rene Scharfe Built-in git-get-tar-commit-id ]
commit_id
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ f2054be4c4816d8c363dc867f462bc0af9031c02 Junio C Hamano Merge branch 'jc/builtin-n-tar-tree' ]
 },
[ 43885c2a557871aedcbb1a412fc18e98c3dd1dc4 Junio C Hamano rename internal format-patch wip ]

	{ "
[ efca578eec57869994da0982e05dcf1dee0bc213 Junio C Hamano Merge branch 'jc/grep' ]
grep
[ 43885c2a557871aedcbb1a412fc18e98c3dd1dc4 Junio C Hamano rename internal format-patch wip ]
", cmd_
[ efca578eec57869994da0982e05dcf1dee0bc213 Junio C Hamano Merge branch 'jc/grep' ]
grep
[ ff38d1a9953b3bce7741f8f962c5e067fda2d9ea Nguyễn Thái Ngọc Duy grep: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ b7786bb4b09463641f3e39eca18aefc630ee4f38 Junio C Hamano Merge branch 'js/difftool-builtin' ]
 }
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
,
[ b28a1ce04cdafbd3b470ec43c0f562054bd45d4d Linus Torvalds make "git hash-object" a built-in ]

	{ "hash-object", cmd_hash_object },
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	{ "help", cmd_help },
[ 3bb7256281bb1d291bb705a57dc3f30b26b7c127 Linus Torvalds make "index-pack" a built-in ]

	{ "index-pack", cmd_index_pack
[ e0fce074fc4fdf2d2175ff97f1cc3db918ea87e9 Nguyễn Thái Ngọc Duy index-pack: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 3bb7256281bb1d291bb705a57dc3f30b26b7c127 Linus Torvalds make "index-pack" a built-in ]
 },
[ 515377ea9ec6192f82a2fa5c5b5b7651d9d6cf6c Nicolas Pitre "init-db" can really be just "init" ]

	{ "init", cmd_init_db },
[ c3c8835fbb182d971d71939b9a3ec7c8b86d6caf Timo Hirvonen Builtin git-init-db ]

	{ "init-db", cmd_init_db },
[ 3473ad0cf6c90917813aba978dada6c10352baaa Dennis Kaarsemaker checkout: don't require a work tree when checking out into a new one ]

	{ "interpret-trailers",
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
 cmd_
[ 3473ad0cf6c90917813aba978dada6c10352baaa Dennis Kaarsemaker checkout: don't require a work tree when checking out into a new one ]
interpret
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
_
[ 3473ad0cf6c90917813aba978dada6c10352baaa Dennis Kaarsemaker checkout: don't require a work tree when checking out into a new one ]
trailers, RUN_SETUP
[ cbd9fc2366abd6bd4bd3a544e2fe438b53ca0d2f John Keeping interpret-trailers: allow running outside a repository ]
_GENTLY
[ 3473ad0cf6c90917813aba978dada6c10352baaa Dennis Kaarsemaker checkout: don't require a work tree when checking out into a new one ]
 },
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]

	{ "log", cmd_log
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]
 },
[ 0864f26421b3c599b462bc867de948d14b268d76 Peter Eriksen Builtin git-ls-files. ]

	{ "ls-files", cmd_ls_files
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 0864f26421b3c599b462bc867de948d14b268d76 Peter Eriksen Builtin git-ls-files. ]
 }
[ aae01bda7f6d3224cf6b2ce0aa9aa668ce35d0b7 Peter Eriksen Builtin git-ls-tree. ]
,
[ 8951d7c1f1ae38f34617b6c2490bf65e73e371f7 Daniel Barkalow Build in ls-remote ]

	{ "ls-remote", cmd_ls_remote
[ f0ef6a6eff15a3df8dc9ec61d93e3f7e540ed0ac Nguyễn Thái Ngọc Duy ls-remote: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ 8951d7c1f1ae38f34617b6c2490bf65e73e371f7 Daniel Barkalow Build in ls-remote ]
 },
[ aae01bda7f6d3224cf6b2ce0aa9aa668ce35d0b7 Peter Eriksen Builtin git-ls-tree. ]

	{ "ls-tree", cmd_ls_tree
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ aae01bda7f6d3224cf6b2ce0aa9aa668ce35d0b7 Peter Eriksen Builtin git-ls-tree. ]
 }
[ 56d1398ad305498faf57d6e433f97ad393d7909e Peter Eriksen Builtin git-tar-tree. ]
,
[ 34488e3c375d159506d5d98e012f3b36e7cd9fe7 Lukas Sandström Make git-mailinfo a builtin ]

	{ "mailinfo", cmd_mailinfo
[ 3f0ec0687d95e0f53c899f964d769ca1846874da Junio C Hamano mailinfo: read local configuration ]
, RUN_SETUP_GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 34488e3c375d159506d5d98e012f3b36e7cd9fe7 Lukas Sandström Make git-mailinfo a builtin ]
 }
[ 7499c996156ea99702fe13e203b97ae60d8868ad Lukas Sandström Make git-stripspace a builtin ]
,
[ e690e84315de1bb806eb2292f8a87cbee30b75ab Lukas Sandström Make git-mailsplit a builtin ]

	{ "mailsplit", cmd_mailsplit
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ e690e84315de1bb806eb2292f8a87cbee30b75ab Lukas Sandström Make git-mailsplit a builtin ]
 }
[ 34488e3c375d159506d5d98e012f3b36e7cd9fe7 Lukas Sandström Make git-mailinfo a builtin ]
,
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]

	{ "
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
merge
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]
",
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
 cmd_merge
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]
,
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
 RUN
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]
_
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
SETUP | NEED
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]
_
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
WORK
[ fcab40a389e99786a8276108cdbc1cda8caf502f Junio C Hamano Merge branch 'mv/merge-in-c' ]
_
[ 1c7b76be7d620bbaf2e6b8417f04012326bbb9df Miklos Vajna Build in merge ]
TREE }
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
,
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]

	{ "
[ 253e772edeb56092e0fad43ec0640658671313c5 Junio C Hamano Merge branch 'maint' ]
merge
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
-
[ 253e772edeb56092e0fad43ec0640658671313c5 Junio C Hamano Merge branch 'maint' ]
base
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
", cmd_
[ 253e772edeb56092e0fad43ec0640658671313c5 Junio C Hamano Merge branch 'maint' ]
merge
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
_
[ 253e772edeb56092e0fad43ec0640658671313c5 Junio C Hamano Merge branch 'maint' ]
base
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
 },
[ ba1f5f353775ddbf97bc0d543888783630693023 Johannes Schindelin Add builtin merge-file, a minimal replacement for RCS merge ]

	{ "merge-file", cmd_merge_file
[ 3668d4238314dc5db98de3034058f68ff57a6b1e Nguyễn Thái Ngọc Duy merge-file: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ ba1f5f353775ddbf97bc0d543888783630693023 Johannes Schindelin Add builtin merge-file, a minimal replacement for RCS merge ]
 },
[ 0ecace728f8e48b87f81433b053d7f277f22e674 Linus Torvalds make "merge-index" a built-in ]

	{ "merge-index", cmd_merge_index, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 0ecace728f8e48b87f81433b053d7f277f22e674 Linus Torvalds make "merge-index" a built-in ]
 },
[ 6c6ea3800d1eace51994d90fbeb19ffe918e63b0 Junio C Hamano Merge branch 'sb/clean' ]

	{ "
[ a00a42ae33708caa742d9e9fbf10692cfa42f032 Thomas Harning git-merge-ours: make it a builtin. ]
merge-ours
[ 6c6ea3800d1eace51994d90fbeb19ffe918e63b0 Junio C Hamano Merge branch 'sb/clean' ]
", cmd_
[ a00a42ae33708caa742d9e9fbf10692cfa42f032 Thomas Harning git-merge-ours: make it a builtin. ]
merge_ours
[ 6c6ea3800d1eace51994d90fbeb19ffe918e63b0 Junio C Hamano Merge branch 'sb/clean' ]
, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 6c6ea3800d1eace51994d90fbeb19ffe918e63b0 Junio C Hamano Merge branch 'sb/clean' ]
 },
[ e1b3a2cad79a8138d18593c6eb3c46906ad2ee42 Daniel Barkalow Build-in merge-recursive ]

	{ "merge-recursive", cmd_merge_recursive, RUN_SETUP | NEED_WORK_TREE
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ e1b3a2cad79a8138d18593c6eb3c46906ad2ee42 Daniel Barkalow Build-in merge-recursive ]
 },
[ 8cc5b29065e19267cbc08b39c34674b02c2e3d59 Avery Pennarun git merge -X<option> ]

	{ "merge-recursive-ours", cmd_merge_recursive, RUN_SETUP | NEED_WORK_TREE
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 8cc5b29065e19267cbc08b39c34674b02c2e3d59 Avery Pennarun git merge -X<option> ]
 },
	{ "merge-recursive-theirs", cmd_merge_recursive, RUN_SETUP | NEED_WORK_TREE
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 8cc5b29065e19267cbc08b39c34674b02c2e3d59 Avery Pennarun git merge -X<option> ]
 },
[ 1736855c9b59ac787af979a44840a58361cbaf66 Junio C Hamano Add merge-subtree back ]

	{ "merge-subtree", cmd_merge_recursive, RUN_SETUP | NEED_WORK_TREE
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
_
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
PARSEOPT }
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
,
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]

	{ "
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
merge
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]
-
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
tree
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]
", cmd
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
_
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
merge
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]
_
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
tree
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]
, RUN_
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
 },
[ 112dd5146589ecb76d52bf349bd51dbe2936e936 Linus Torvalds make "mktag" a built-in ]

	{ "mktag", cmd_mktag, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 112dd5146589ecb76d52bf349bd51dbe2936e936 Linus Torvalds make "mktag" a built-in ]
 },
[ 633e3556ccbcc7e443f5e9194c4a830181696ef0 Junio C Hamano build-in git-mktree ]

	{ "mktree", cmd_mktree, RUN_SETUP },
[ c00ba2233ef7dcfa478068c75bc4b25a7ac2a0a8 Junio C Hamano Sync 'ds/multi-pack-index' to v2.19.0-rc0 ]

	{ "multi-pack-index", cmd_multi_pack_index, RUN_SETUP_GENTLY },
[ 7061cf0f205e86613c3a3306fdfedf2a5dcc8a65 Junio C Hamano Merge branch 'lt/setup' into __/setup-n-mv ]

	{ "mv", cmd_mv,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 7061cf0f205e86613c3a3306fdfedf2a5dcc8a65 Junio C Hamano Merge branch 'lt/setup' into __/setup-n-mv ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
 |
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
 NEED
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
WORK_TREE
[ 7061cf0f205e86613c3a3306fdfedf2a5dcc8a65 Junio C Hamano Merge branch 'lt/setup' into __/setup-n-mv ]
 },
[ d6b64ed0f3549f56c4d948dc2c0f12abc52fd6c9 Matthias Kestenholz Make git-name-rev a builtin ]

	{ "name-rev", cmd_name_rev,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ d6b64ed0f3549f56c4d948dc2c0f12abc52fd6c9 Matthias Kestenholz Make git-name-rev a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ d6b64ed0f3549f56c4d948dc2c0f12abc52fd6c9 Matthias Kestenholz Make git-name-rev a builtin ]
 },
[ cd067d3bf4ea3f89969cd143be3e281e1c5ac58a Johan Herland Builtin-ify git-notes ]

	{ "notes", cmd_notes, RUN_SETUP },
[ 5d4a60033543e063bc9d77ca957de0187fb58fb3 Matthias Kestenholz Make git-pack-objects a builtin ]

	{ "pack-objects", cmd_pack_objects,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 5d4a60033543e063bc9d77ca957de0187fb58fb3 Matthias Kestenholz Make git-pack-objects a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 5d4a60033543e063bc9d77ca957de0187fb58fb3 Matthias Kestenholz Make git-pack-objects a builtin ]
 },
[ 377d0276ca7446ce9fb2f6987b1e6b4ba9e7cf29 Linus Torvalds make "git pack-redundant" a built-in ]

	{ "pack-redundant", cmd_pack_redundant, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 377d0276ca7446ce9fb2f6987b1e6b4ba9e7cf29 Linus Torvalds make "git pack-redundant" a built-in ]
 },
[ e1e22e37f47e3f4d741d28920e1d27e3775c31ad Linus Torvalds Start handling references internally as a sorted in-memory list ]

	{ "pack-refs", cmd_pack_refs, RUN_SETUP },
[ dedc0ec5d778214528dae3bddf60d77cfcde4bd4 Linus Torvalds make "git patch-id" a built-in ]

	{ "patch-id", cmd_patch_id
[ 1c2b1f7018ba7d5f6a5d949e29e4eaeeef3261e2 Junio C Hamano Merge branch 'bw/ls-files-recurse-submodules' ]
, RUN_SETUP_GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ dedc0ec5d778214528dae3bddf60d77cfcde4bd4 Linus Torvalds make "git patch-id" a built-in ]
 },
[ acca687fa9db8eaa380b65d63c3f0d4364892acf Junio C Hamano git-pickaxe: retire pickaxe ]

	{ "pickaxe", cmd_blame, RUN_SETUP },
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]

	{
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
 "
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]
prune
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
",
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]
 cmd
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
_
[ ba84a797e76c27932e0b317c7ce54925e81093f7 Linus Torvalds builtin "git prune" ]
prune
[ d3ba675aae3c6c5722ad15cd9d0f3b7634e976ce Junio C Hamano Merge branch 'ml/trace' ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
 },
[ 53bb2c002a53cdd0746444defbf5323ea21eb8d5 Matthias Kestenholz Make git-prune-packed a builtin ]

	{ "prune-packed", cmd_prune_packed,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 53bb2c002a53cdd0746444defbf5323ea21eb8d5 Matthias Kestenholz Make git-prune-packed a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 53bb2c002a53cdd0746444defbf5323ea21eb8d5 Matthias Kestenholz Make git-prune-packed a builtin ]
 },
[ 1e1ea69fa4e5fb20baefe9e5422527e971d56a86 Paul Tan pull: implement skeletal builtin pull ]

	{ "pull", cmd_pull, RUN_SETUP | NEED_WORK_TREE },
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]

	{ "
[ 89d07f750a3f878c42b3de96ee93dc571b42b230 René Scharfe diff: don't run pager if user asked for a diff style exit code ]
push
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
", cmd_
[ 755225de6ce4c7b39137afefb35208d0dbc14d9d Linus Torvalds git builtin "push" ]
push
[ 6c8d06aff107aa2132648d682a278111c1d08565 Jeff King git-push: allow pushing from subdirectories ]
,
[ 102cb08521df5f33b30c0ef41a1078a61e593943 Junio C Hamano Merge branch 'master' into mk/rename ]
 RUN
[ 6c8d06aff107aa2132648d682a278111c1d08565 Jeff King git-push: allow pushing from subdirectories ]
_
[ 102cb08521df5f33b30c0ef41a1078a61e593943 Junio C Hamano Merge branch 'master' into mk/rename ]
SETUP
[ 89d07f750a3f878c42b3de96ee93dc571b42b230 René Scharfe diff: don't run pager if user asked for a diff style exit code ]
 },
[ 348ae56cb2266d3294611112ae0368386124d720 Johannes Schindelin Introduce `range-diff` to compare iterations of a topic branch ]

	{ "range-diff"
[ 55071ea248ef8040e4b29575376273e4dd061683 Pratik Karki rebase: start implementing it as a builtin ]
,
[ 348ae56cb2266d3294611112ae0368386124d720 Johannes Schindelin Introduce `range-diff` to compare iterations of a topic branch ]
 cmd_range_diff,
[ 73c2779f421fe1eaead6f1c07a0e134a9c17d6db Paul Tan builtin-am: implement skeletal builtin am ]
 RUN_SETUP |
[ 348ae56cb2266d3294611112ae0368386124d720 Johannes Schindelin Introduce `range-diff` to compare iterations of a topic branch ]
 USE
[ 73c2779f421fe1eaead6f1c07a0e134a9c17d6db Paul Tan builtin-am: implement skeletal builtin am ]
_
[ 348ae56cb2266d3294611112ae0368386124d720 Johannes Schindelin Introduce `range-diff` to compare iterations of a topic branch ]
PAGER
[ 55071ea248ef8040e4b29575376273e4dd061683 Pratik Karki rebase: start implementing it as a builtin ]
 },
[ d147e501f37a596e73a430ce46f125f83e06aa07 Peter Eriksen Builtin git-read-tree. ]

	{ "read-tree", cmd_read_tree
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 2243d229f75be41318db8798fc90399dd6dedb42 Junio C Hamano Merge branch 'sb/unpack-trees-super-prefix' ]
 | SUPPORT_SUPER_PREFIX
[ d147e501f37a596e73a430ce46f125f83e06aa07 Peter Eriksen Builtin git-read-tree. ]
}
[ 6d96ac18e52aca19ff1087ffa64e2d616cc75c6f Peter Eriksen Builtin git-commit-tree. ]
,
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	/
[ bb1ab2db08f48add4236a5a9c08aa1a6aa4d5d48 Junio C Hamano Merge branch 'j6t/mingw' ]
*
[ be8a90e59ce4c7603207a8255284fdbbffff1a2e Johannes Schindelin difftool: add a skeleton for the upcoming builtin ]

	 * NEEDSWORK:
[ 55071ea248ef8040e4b29575376273e4dd061683 Pratik Karki rebase: start implementing it as a builtin ]
 Until the rebase is independent and needs no redirection
[ 5ae50845d8a30d7db32e139ce04b712f9deb99cd Junio C Hamano Merge branch 'pk/rebase-in-c' ]

	 * to rebase shell script this is kept as is, then should be changed to
	 * RUN_SETUP | NEED_WORK_TREE
[ 97fc6c5fbacc2181319bbd7e2faa8ac04476f862 Andreas Ericsson git --help COMMAND brings up the git-COMMAND man-page. ]

	 */
[ 5ae50845d8a30d7db32e139ce04b712f9deb99cd Junio C Hamano Merge branch 'pk/rebase-in-c' ]

	{ "rebase", cmd_rebase },
[ 4557f1add261b70887136498084e7491a3f9535f Johannes Schindelin rebase--helper: add a builtin helper for interactive rebases ]

	{ "rebase--
[ b49ef560ed66449d24a3fdfe25972c390bb44951 Junio C Hamano Merge branch 'ag/rebase-i-in-c' ]
interactive
[ 4557f1add261b70887136498084e7491a3f9535f Johannes Schindelin rebase--helper: add a builtin helper for interactive rebases ]
", cmd_rebase__
[ b49ef560ed66449d24a3fdfe25972c390bb44951 Junio C Hamano Merge branch 'ag/rebase-i-in-c' ]
interactive
[ 4557f1add261b70887136498084e7491a3f9535f Johannes Schindelin rebase--helper: add a builtin helper for interactive rebases ]
, RUN_SETUP | NEED_WORK_TREE },
[ be5908aed35d1c129f1ea38913b230ee1927361b Junio C Hamano receive-pack: make it a builtin ]

	{ "receive-pack", cmd_receive_pack },
[ e8b4029f990907e24fac0e7772ee19ee6dd55c1c Junio C Hamano Merge branch 'jc/fsck-reflog' ]

	{ "reflog", cmd_reflog, RUN_SETUP },
[ 211c89682eeef310f39022b91e88d07cd5784953 Johannes Schindelin Make git-remote a builtin ]

	{ "remote", cmd_remote, RUN_SETUP },
[ 7f3ecebfcda9b32252a4791dc716c1e3d88c9f70 Ilari Liusvaara git-remote-ext ]

	{ "remote-ext", cmd_remote_ext
[ b10edb2df55241b2e042b3d5473537904d09d193 Junio C Hamano Merge branch 'ds/commit-graph' ]
,
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 NO_PARSEOPT
[ 7f3ecebfcda9b32252a4791dc716c1e3d88c9f70 Ilari Liusvaara git-remote-ext ]
 },
[ 3a9ed4bdee5032ecb9328aea51a752d69a2d966e Ilari Liusvaara git-remote-fd ]

	{ "remote-fd", cmd_remote_fd
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ 3a9ed4bdee5032ecb9328aea51a752d69a2d966e Ilari Liusvaara git-remote-fd ]
 },
[ dec034a34e3887beaea9a7a390fd950346806c1e Junio C Hamano Merge branch 'sb/repack-in-c' ]

	{ "repack", cmd_repack, RUN_SETUP },
[ 54b0c1e041e50cc08b1520b7d557770916d0b7ab Christian Couder Add new "git replace" command ]

	{ "replace", cmd_replace, RUN_SETUP },
[ 9def2138a17325c68961c3b1e6c967d33f28a4f1 Junio C Hamano Merge branch 'js/rerere' ]

	{ "rerere", cmd_rerere, RUN_SETUP },
[ 0e5a7faa3a903cf7a0a66c81e20a76b91f17faab Carlos Rica Make "git reset" a builtin. ]

	{ "reset", cmd_reset, RUN_SETUP },
[ 376bb3a352d6512a318706c2fba5737ffd7cc92b Junio C Hamano Merge branch 'lt/dirwalk' ]

	{ "
[ 5fb61b8dcfdf7bcec0793c071813e255d1803859 Linus Torvalds Make "git rev-list" be a builtin ]
rev-list
[ 56d1398ad305498faf57d6e433f97ad393d7909e Peter Eriksen Builtin git-tar-tree. ]
", cmd_
[ 376bb3a352d6512a318706c2fba5737ffd7cc92b Junio C Hamano Merge branch 'lt/dirwalk' ]
rev
[ 56d1398ad305498faf57d6e433f97ad393d7909e Peter Eriksen Builtin git-tar-tree. ]
_
[ 376bb3a352d6512a318706c2fba5737ffd7cc92b Junio C Hamano Merge branch 'lt/dirwalk' ]
list
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 56d1398ad305498faf57d6e433f97ad393d7909e Peter Eriksen Builtin git-tar-tree. ]
 }
[ d147e501f37a596e73a430ce46f125f83e06aa07 Peter Eriksen Builtin git-read-tree. ]
,
[ 895f10c3b596ef955c7f252717e5b4668530c569 Christian Couder Builtin git-rev-parse. ]

	{ "rev-parse", cmd_rev_parse
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ 895f10c3b596ef955c7f252717e5b4668530c569 Christian Couder Builtin git-rev-parse. ]
 }
[ 8ed05fb5e90f8ad2051ff7071b7425a53c594892 Lukas Sandström Make git-write-tree a builtin ]
,
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]

	{ "revert", cmd_revert, RUN_SETUP |
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
 NEED
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]
_
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
WORK_TREE
[ 9509af686bffdbd7c3f17faf3c07d2034d480ffc Johannes Schindelin Make git-revert & git-cherry-pick a builtin ]
 },
[ 217542640ed219c980fff2b3c307c4520120f20f Junio C Hamano built-in tar-tree and remote tar-tree ]

	{ "
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
rm
[ 217542640ed219c980fff2b3c307c4520120f20f Junio C Hamano built-in tar-tree and remote tar-tree ]
", cmd_
[ d9b814cc97f16daac06566a5340121c446136d22 Linus Torvalds Add builtin "git rm" command ]
rm
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
 },
[ 96249c04c07f00485a3ed1052ff10b27ab147fc5 Daniel Barkalow Build-in send-pack, with an API for other programs to call. ]

	{ "send-pack", cmd_send_pack, RUN_SETUP },
[ ed10cb952d315ae47d2f7f6f29333a9ee227bf6b Brandon Williams serve: introduce git-serve ]

	{ "serve", cmd_serve, RUN_SETUP },
[ b8ec59234ba2c1833e29eece9ed87f7a471cbae2 Johannes Schindelin Build in shortlog ]

	{ "shortlog", cmd_shortlog,
[ 773b69bf7189f5babb26b899b4c35f604cd993c7 Nguyễn Thái Ngọc Duy shortlog: run setup_git_directory_gently() sooner ]
 RUN_SETUP_GENTLY |
[ 1d541c120b4de5c70e73f8a20e1d961324cc55fe Johannes Schindelin shortlog: use pager ]
 USE_PAGER
[ b8ec59234ba2c1833e29eece9ed87f7a471cbae2 Johannes Schindelin Build in shortlog ]
 },
[ ba1d45051e050cbcf68ccccacea86a4b6ecde731 Linus Torvalds Tentative built-in "git show" ]

	{ "show", cmd_show
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ ba1d45051e050cbcf68ccccacea86a4b6ecde731 Linus Torvalds Tentative built-in "git show" ]
 },
[ 51ce34b9923d9b119ac53414584f80e05520abea Peter Eriksen Builtin git-show-branch. ]

	{ "show-branch", cmd_show_branch
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 51ce34b9923d9b119ac53414584f80e05520abea Peter Eriksen Builtin git-show-branch. ]
 }
[ e8cc9cd98e2ecd7fd8bb03e725d470405c8e2b94 Peter Eriksen Builtin git-diff-files, git-diff-index, git-diff-stages, and git-diff-tree. ]
,
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]

	{ "
[ ae533c4a92aef6ab180441dbb76ef83521fc87d6 Junio C Hamano Merge branch 'jm/cache-entry-from-mem-pool' ]
show
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]
-index", cmd
[ 6a257f03ba9b86c744064d08df98db1847cf1722 Derrick Stolee multi-pack-index: add builtin ]
_
[ ae533c4a92aef6ab180441dbb76ef83521fc87d6 Junio C Hamano Merge branch 'jm/cache-entry-from-mem-pool' ]
show
[ 6a257f03ba9b86c744064d08df98db1847cf1722 Derrick Stolee multi-pack-index: add builtin ]
_
[ ae533c4a92aef6ab180441dbb76ef83521fc87d6 Junio C Hamano Merge branch 'jm/cache-entry-from-mem-pool' ]
index
[ fa82bb70d9ef3acb6a47cddfb38a7b0ca40ac362 Junio C Hamano Merge branch 'jk/show-index' ]
 },
[ e9800b28c24465377dc2b8e26b322d362912647c Junio C Hamano Merge branch 'jc/lt-ref2-with-lt-refs' into jc/ref-locking ]

	{ "show-ref", cmd_show_ref, RUN_SETUP },
[ 11920d28da1ac1b65eb4041c1b7355924e5d1366 Scott Chacon Add a built-in alias for 'stage' to the 'add' command ]

	{ "stage", cmd_add, RUN_SETUP | NEED_WORK_TREE },
[ 131f0315c46c30d5a9e6743354808230cf4908c0 Junio C Hamano Merge branch 'pr/use-default-sigpipe-setting' ]

	/*
[ 90a462725ef3932a2408e78a47e3dfc1b8d445cf Johannes Schindelin stash: optionally use the scripted version again ]

	 * NEEDSWORK: Until the builtin
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
 stash
[ 90a462725ef3932a2408e78a47e3dfc1b8d445cf Johannes Schindelin stash: optionally use the scripted version again ]
 is thoroughly robust and no
	 * longer needs redirection to the stash shell script this is kept as
	 * is
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
,
[ 90a462725ef3932a2408e78a47e3dfc1b8d445cf Johannes Schindelin stash: optionally use the scripted version again ]
 then should be changed to
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
 RUN_
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
SETUP | NEED
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
_
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
WORK
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
_
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
TREE
[ bb1ab2db08f48add4236a5a9c08aa1a6aa4d5d48 Junio C Hamano Merge branch 'j6t/mingw' ]

	 */
[ 90a462725ef3932a2408e78a47e3dfc1b8d445cf Johannes Schindelin stash: optionally use the scripted version again ]

	{ "stash", cmd_stash
[ 8a0fc8d19dff0c0ed09ce6656e353daf06c21892 Joel Teichroeb stash: convert apply to builtin ]
 }
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
,
[ f5bbc3225c4b073a7ff3218164a0c820299bc9c6 Kristian Høgsberg Port git commit to C. ]

	{ "status", cmd_status, RUN_SETUP | NEED_WORK_TREE },
[ 7499c996156ea99702fe13e203b97ae60d8868ad Lukas Sandström Make git-stripspace a builtin ]

	{ "stripspace", cmd_stripspace }
[ fefe81c9964a12394d6ea81ce474ff402f0eb070 Lukas Sandström Make git-update-index a builtin ]
,
[ 65e1449614d3af34a022007cd335d0e563dea721 Junio C Hamano Merge branch 'sb/submodule-helper' ]

	{ "submodule--helper", cmd_submodule__helper, RUN_SETUP
[ 55d128ae06b7b82f867961b677984620612a201c Junio C Hamano Merge branch 'bw/grep-recurse-submodules' ]
 | SUPPORT_SUPER_PREFIX
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 65e1449614d3af34a022007cd335d0e563dea721 Junio C Hamano Merge branch 'sb/submodule-helper' ]
 },
[ 640ce1052bbd6a8f1dd4d58beaa521d7592a0f02 Matthias Kestenholz Make git-symbolic-ref a builtin ]

	{ "symbolic-ref", cmd_symbolic_ref,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 640ce1052bbd6a8f1dd4d58beaa521d7592a0f02 Matthias Kestenholz Make git-symbolic-ref a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 640ce1052bbd6a8f1dd4d58beaa521d7592a0f02 Matthias Kestenholz Make git-symbolic-ref a builtin ]
 },
[ 55d1932bce99d83fa0d891331fe3f3562d33af2e Junio C Hamano Merge branch 'cr/tag' ]

	{ "tag", cmd_tag, RUN_SETUP
[ de121ffe57fd14334c24f0ac51dbc6828a3bc315 Martin Ågren tag: respect `pager.tag` in list-mode only ]
 | DELAY_PAGER_CONFIG
[ 55d1932bce99d83fa0d891331fe3f3562d33af2e Junio C Hamano Merge branch 'cr/tag' ]
 },
[ b53258182bf90b4fb922a20d164a02e6f0e9afd1 Linus Torvalds make "git unpack-file" a built-in ]

	{ "unpack-file", cmd_unpack_file, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ b53258182bf90b4fb922a20d164a02e6f0e9afd1 Linus Torvalds make "git unpack-file" a built-in ]
 },
[ 6441363079d85cf17aee21b8925e9745c8abda16 Matthias Kestenholz Make git-unpack-objects a builtin ]

	{ "unpack-objects", cmd_unpack_objects,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ 6441363079d85cf17aee21b8925e9745c8abda16 Matthias Kestenholz Make git-unpack-objects a builtin ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 6441363079d85cf17aee21b8925e9745c8abda16 Matthias Kestenholz Make git-unpack-objects a builtin ]
 },
[ fefe81c9964a12394d6ea81ce474ff402f0eb070 Lukas Sandström Make git-update-index a builtin ]

	{ "update-index", cmd_update_index
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ fefe81c9964a12394d6ea81ce474ff402f0eb070 Lukas Sandström Make git-update-index a builtin ]
 }
[ 854b4629f97fb216a91805706cd61b33beb49172 Lukas Sandström Make git-update-ref a builtin ]
,
	{ "update-ref", cmd_update_ref
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 854b4629f97fb216a91805706cd61b33beb49172 Lukas Sandström Make git-update-ref a builtin ]
 }
[ 00449f992b629f7f7884fb2cf46ff411a2a4f381 Johannes Schindelin Make git-fmt-merge-msg a builtin ]
,
[ 53a1116c611e9e717d90e1406b29d97648460773 René Scharfe update-server-info: make builtin, use parseopt ]

	{ "update-server-info", cmd_update_server_info, RUN_SETUP },
[ 39345a216ff37bda9fb7cec85f6de44069f5205d Franck Bui-Huu Add git-upload-archive ]

	{ "upload-archive", cmd_upload_archive
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ 39345a216ff37bda9fb7cec85f6de44069f5205d Franck Bui-Huu Add git-upload-archive ]
 },
[ 1bc01efed17c751e98fd6c5f9889759bfa9a8e9b Jeff King upload-archive: use start_command instead of fork ]

	{ "upload-archive--writer", cmd_upload_archive_writer
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, NO_PARSEOPT
[ 1bc01efed17c751e98fd6c5f9889759bfa9a8e9b Jeff King upload-archive: use start_command instead of fork ]
 },
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]

	{ "
[ 9bfa0f9be3e718f701200a242ea04259a4dc4dfc Junio C Hamano Merge branch 'bw/protocol-v2' ]
upload
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
-
[ 9bfa0f9be3e718f701200a242ea04259a4dc4dfc Junio C Hamano Merge branch 'bw/protocol-v2' ]
pack
[ 907a7cb51c6c44d25f4c734a46d5174363190a84 Linus Torvalds make "git merge-tree" a built-in ]
", cmd_
[ 9bfa0f9be3e718f701200a242ea04259a4dc4dfc Junio C Hamano Merge branch 'bw/protocol-v2' ]
upload_pack }
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
,
[ 55b6745d633b9501576eb02183da0b0fb1cee964 Linus Torvalds make "git var" a built-in ]

	{ "var", cmd_var
[ 2bc8c1a8a6b1cdffc19badc7272f552302b79d3e Nguyễn Thái Ngọc Duy var: run setup_git_directory_gently() sooner ]
, RUN_SETUP_GENTLY
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 55b6745d633b9501576eb02183da0b0fb1cee964 Linus Torvalds make "git var" a built-in ]
 },
[ 39177c7f184b4c07a1f53f99f59c920c3fb6222d Junio C Hamano Merge branch 'mg/verify-commit' ]

	{ "verify-commit", cmd_verify_commit, RUN_SETUP },
[ 2e3ed670eb09feffe847af55db38da3dcecc2a88 Rene Scharfe git-verify-pack: make builtin ]

	{ "verify-pack", cmd_verify_pack },
[ 55d1932bce99d83fa0d891331fe3f3562d33af2e Junio C Hamano Merge branch 'cr/tag' ]

	{ "verify-tag", cmd_verify_tag, RUN_SETUP },
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	{ "version", cmd_version },
[ 5b84f4d87a1bd58c7540e9ea82ee3673ecddbad5 Junio C Hamano Built-in git-whatchanged. ]

	{ "whatchanged", cmd_
[ 70827b15bfb11f7aea52c6995956be9d149233e1 Linus Torvalds Split up builtin commands into separate files from git.c ]
whatchanged
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 5b84f4d87a1bd58c7540e9ea82ee3673ecddbad5 Junio C Hamano Built-in git-whatchanged. ]
 },
[ 5f02274e4c4506b923b510a24da7991656f4db14 Junio C Hamano Merge branch 'pt/pull-builtin' ]

	{ "
[ df0b6cfbda88144714541664fb501146d6465a82 Nguyễn Thái Ngọc Duy worktree: new place for "git prune --worktrees" ]
worktree
[ 5f02274e4c4506b923b510a24da7991656f4db14 Junio C Hamano Merge branch 'pt/pull-builtin' ]
", cmd_
[ df0b6cfbda88144714541664fb501146d6465a82 Nguyễn Thái Ngọc Duy worktree: new place for "git prune --worktrees" ]
worktree
[ 5f02274e4c4506b923b510a24da7991656f4db14 Junio C Hamano Merge branch 'pt/pull-builtin' ]
, RUN_SETUP
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 | NO_PARSEOPT
[ 5f02274e4c4506b923b510a24da7991656f4db14 Junio C Hamano Merge branch 'pt/pull-builtin' ]
 },
[ 8ed05fb5e90f8ad2051ff7071b7425a53c594892 Lukas Sandström Make git-write-tree a builtin ]

	{ "write-tree", cmd_write_tree
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
,
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
 RUN
[ a633fca0c056aa221d23493c276d3713191621b3 Linus Torvalds Call setup_git_directory() much earlier ]
_
[ efffea033457eedb90ad63596687564f797f12de Junio C Hamano git.c: Rename NEEDS_PREFIX to RUN_SETUP ]
SETUP
[ 8ed05fb5e90f8ad2051ff7071b7425a53c594892 Lukas Sandström Make git-write-tree a builtin ]
 }
[ e690e84315de1bb806eb2292f8a87cbee30b75ab Lukas Sandström Make git-mailsplit a builtin ]
,
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

};
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]


static
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 struct cmd_struct *
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
get_builtin(const char *s)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	int i;
	for (i = 0;
[ c6127fa3e25551e969d775b0332d37dc84db1969 Sebastian Schuberth builtin/help.c: speed up is_git_command() by checking for builtin commands first ]
 i < ARRAY_SIZE(commands);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
 i++) {
[ c6127fa3e25551e969d775b0332d37dc84db1969 Sebastian Schuberth builtin/help.c: speed up is_git_command() by checking for builtin commands first ]

		struct cmd_struct *p = commands + i;
		if (!strcmp(s, p->cmd))
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]

			return
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 p
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	}
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]

	return NULL;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ c6127fa3e25551e969d775b0332d37dc84db1969 Sebastian Schuberth builtin/help.c: speed up is_git_command() by checking for builtin commands first ]


int is_builtin(const char *s)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]

	return !!get_builtin(s);
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]

}
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]


static void list_builtins(
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
struct string_list *out,
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
 unsigned int exclude_option
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
)
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

{
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]

	int i;
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]

	for (i = 0;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 i < ARRAY_SIZE(commands);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
 i++) {
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]

		if
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
 (
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
exclude_option &&
		    (
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
commands[i].
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
option & exclude_option))
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			continue;
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]

		string_list_append
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
(
[ e5d7a61953c236fbc468bc1bb01383766d2cb55b Nguyễn Thái Ngọc Duy git --list-cmds: collect command list in a string_list ]
out
[ e9547947795472c07453d0551b0cabb4ae378b5f Nguyễn Thái Ngọc Duy git.c: add hidden option --list-parseopt-builtins ]
, commands[i].
[ 8893fd95b66cbd6566136a289dd05fcf4e547281 Jeff King git: add hidden --list-builtins option ]
cmd);
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

	}
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 63ca1c099c36e61b0e9cd7fa0b912c0b9d89b628 Alexander Kuleshov git.c: simplify stripping extension of a file in handle_builtin() ]


#ifdef STRIP_EXTENSION
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]

static
[ dede29612a723a7da9f489fecbdf02500a018430 Junio C Hamano Merge branch 'ak/git-strip-extension-from-dashed-command' ]
 void strip
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
_
[ dede29612a723a7da9f489fecbdf02500a018430 Junio C Hamano Merge branch 'ak/git-strip-extension-from-dashed-command' ]
extension
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
(
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
const char *
[ dede29612a723a7da9f489fecbdf02500a018430 Junio C Hamano Merge branch 'ak/git-strip-extension-from-dashed-command' ]
*argv
[ 11529ecec914d2f0d7575e6d443c2d5a6ff75424 Junio C Hamano Merge branch 'jk/tighten-alloc' ]
)
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

{
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	size_t len;
[ 63ca1c099c36e61b0e9cd7fa0b912c0b9d89b628 Alexander Kuleshov git.c: simplify stripping extension of a file in handle_builtin() ]


	if (strip_suffix(argv[0], STRIP_EXTENSION, &len))
		argv[0] = xmemdupz(argv[0], len);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 63ca1c099c36e61b0e9cd7fa0b912c0b9d89b628 Alexander Kuleshov git.c: simplify stripping extension of a file in handle_builtin() ]

#else
#define strip_extension(cmd)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

#endif
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


static void handle_
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]
builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
(int argc,
[ 9201c707426b3dc0c894775416f576c25c008d46 Junio C Hamano Const tightening. ]
 const
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 char **argv)
{
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]

	struct argv_array args = ARGV_ARRAY_INIT;
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

	const char *cmd;
[ 68a2e6a2c80303144807c8c91a087427e3c8e727 Junio C Hamano Merge branch 'nd/multiple-work-trees' ]

	struct
[ 6634f05454662b62e1f34766d3684b99fb53ad66 Christian Couder trailer: add interpret-trailers command ]
 cmd_
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
struct *builtin;
[ 63ca1c099c36e61b0e9cd7fa0b912c0b9d89b628 Alexander Kuleshov git.c: simplify stripping extension of a file in handle_builtin() ]


	strip_extension(argv);
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	cmd = argv[0];
[ 1cd95087c331e17c44a8b62f0614d55e621dcfd4 Linus Torvalds Support "git cmd --help" syntax ]


	/* Turn "git cmd --help" into "git help
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]
 --exclude-guides
[ 1cd95087c331e17c44a8b62f0614d55e621dcfd4 Linus Torvalds Support "git cmd --help" syntax ]
 cmd" */
	if (argc > 1 && !strcmp(argv[1], "--help")) {
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

		int i;
[ 1cd95087c331e17c44a8b62f0614d55e621dcfd4 Linus Torvalds Support "git cmd --help" syntax ]


		argv[1] = argv[0];
		argv[0] = cmd = "help";
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]


		for (i = 0;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
 i < argc;
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
 i++) {
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]

			argv
[ 3f2e2297b9c88a6ab5fc4bff02cf2a07ce057589 Jeff King add an extra level of indirection to main() ]
_
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]
array_push(&args, argv[i]);
			if (!i)
				argv_array_push(&args, "--exclude-guides");
[ 1cd95087c331e17c44a8b62f0614d55e621dcfd4 Linus Torvalds Support "git cmd --help" syntax ]

		}
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]


		argc++;
		argv = args.argv;
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

	}
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]


	builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 =
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
 get
[ 68a2e6a2c80303144807c8c91a087427e3c8e727 Junio C Hamano Merge branch 'nd/multiple-work-trees' ]
_
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
builtin(cmd)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
;
	if (
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
)
[ 47d0b4ff57f391786ed050f38c0de51462eda97a Linus Torvalds Clean up internal command handling ]

		exit(run
[ 7ae3df8c0aa3b7337ae9ac7b6184ac05985bf996 Matthias Lederhofer Use new semantics of is_bare/inside_git_dir/inside_work_tree ]
_
[ f172f334fde49ce29d0afa21749bf85463a2db9a Jeff King git: s/run_command/run_builtin/ ]
builtin
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
(
[ c4f901d1593f3ef097c3e73daa2847ed9ad9efe0 Slavomir Vlcek builtin: move builtin retrieval to get_builtin() ]
builtin
[ 7eff28a9b42cb0d3aad932338b2e645fc6ed8fa9 Shawn O. Pearce Disallow working directory commands in a bare repository. ]
,
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 argc, argv));
[ 2c6b6d9f7d8a26b6ae6493584cc3d2a3cbae7358 Ralf Thielow help: make option --help open man pages only for Git commands ]

	argv_array_clear(&args);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ 23326d14edbd16469453f6c3ecdd98ab90e6efb7 Johannes Sixt Windows: Strip ".exe" from the program name. ]


static
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
 void execv_dashed_external(
[ 23326d14edbd16469453f6c3ecdd98ab90e6efb7 Johannes Sixt Windows: Strip ".exe" from the program name. ]
const char
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
 **argv)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]

	struct child
[ 89c8626557621ef000930da3c8a23fa03ad7e01a Stefan Beller submodule helper: support super prefix ]
_
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
process
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
 cmd
[ f285a2d7ed6548666989406de8f0e7233eb84368 Brandon Casey Replace calls to strbuf_init(&foo, 0) with STRBUF_INIT initializer ]
 =
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
 CHILD_PROCESS
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
_INIT;
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]

	int status;
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]


	if (get_super_prefix())
		die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
("%s doesn't support --super-prefix"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 74866d75793559e8b351a17100679f83b96972ca Brandon Williams git: make super-prefix option ]
, argv[0]);
[ 7cf16a14f5c070f7b14cf28023769450133172ae Michael J Gruber handle_alias: provide GIT_PREFIX to !alias ]


	if (
[ 92058e4d3e032714da6d2df5fa1fe2cf612979a5 Jeff King support pager.* for external commands ]
use_pager == -1
[ 595d59e2b53a19f8c5c277348e4e1a07bb913ba4 Martin Ågren git.c: ignore pager.* when launching builtin as dashed external ]
 && !is_builtin(argv[0]
[ 92058e4d3e032714da6d2df5fa1fe2cf612979a5 Jeff King support pager.* for external commands ]
)
[ 595d59e2b53a19f8c5c277348e4e1a07bb913ba4 Martin Ågren git.c: ignore pager.* when launching builtin as dashed external ]
)
[ 92058e4d3e032714da6d2df5fa1fe2cf612979a5 Jeff King support pager.* for external commands ]

		use_pager = check_pager_config
[ 67c116bb26b4ee31889e5ee15d6a9d3b7e972b7b Junio C Hamano Merge branch 'jk/pager-with-external-command' ]
(
[ 92058e4d3e032714da6d2df5fa1fe2cf612979a5 Jeff King support pager.* for external commands ]
argv[0]
[ 67c116bb26b4ee31889e5ee15d6a9d3b7e972b7b Junio C Hamano Merge branch 'jk/pager-with-external-command' ]
);
[ 030149a4dcd584f6b47221f5b087d081e582d790 Jonathan Nieder git --paginate: paginate external commands again ]

	commit_pager_choice();
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]


	argv
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
_
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
array_pushf
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
(&cmd
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
.args
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
, "git-%s", argv
[ 23326d14edbd16469453f6c3ecdd98ab90e6efb7 Johannes Sixt Windows: Strip ".exe" from the program name. ]
[
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
0
[ 23326d14edbd16469453f6c3ecdd98ab90e6efb7 Johannes Sixt Windows: Strip ".exe" from the program name. ]
]
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
);
	argv
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
_
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
array
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
_pushv(&
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
cmd.
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
args, argv + 1);
	cmd.clean_on_exit = 1;
[ 46df6906f3aaf74dafe2026b028c8c5c1a0d5f58 Jeff King execv_dashed_external: wait for child on signal death ]

	cmd.wait_after_clean = 1;
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]

	cmd.silent_exec_failure = 1
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
;
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

	cmd.trace2_child_class = "dashed";

	trace2_cmd_name("_run_dashed_");
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]


	/*
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

	 * The code in run_command() logs trace2 child_start/child_exit
	 * events, so we do not need to report exec/exec_result events here.
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]

	 */
	trace_argv_printf(
[ 2b296c93d49d65303a4ce291225c8755eeab1ff8 Jeff King execv_dashed_external: use child_process struct ]
cmd.args.
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
argv, "trace: exec:");
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]


	/*
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]

	 * If we fail because the command is not found, it is
	 * OK to
[ bb1ab2db08f48add4236a5a9c08aa1a6aa4d5d48 Junio C Hamano Merge branch 'j6t/mingw' ]
 return
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]
. Otherwise, we just pass along the status code
[ 246f0edec0b789ccfeebcf7fef85417b7cb04425 Jeff King execv_dashed_external: stop exiting with negative code ]
,
	 * or our usual generic code if we were not even able to exec
	 * the program
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]
.
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

	 */
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]

	status = run_command
[ bb1ab2db08f48add4236a5a9c08aa1a6aa4d5d48 Junio C Hamano Merge branch 'j6t/mingw' ]
(&cmd);
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]


	/*
	 * If the child process ran and we are now going to exit, emit a
	 * generic string as our trace2 command verb to indicate that we
	 * launched a dashed command.
[ 7559a1be8a0afb10df41d25e4cf4c5285a5faef1 Patrick Reynolds unblock and unignore SIGPIPE ]

	 */
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]

	if (status
[ 0ac77ec3150f43a5c2a6b1e47e9db5aafe53fb72 Johannes Sixt run_command: report system call errors instead of returning error codes ]
 >= 0
[ 246f0edec0b789ccfeebcf7fef85417b7cb04425 Jeff King execv_dashed_external: stop exiting with negative code ]
)
[ 5709e0363a891b72eb9e9756d7fb121d9bf6a7c7 Johannes Sixt run_command: return exit code as positive value ]

		exit
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]
(status);
[ 246f0edec0b789ccfeebcf7fef85417b7cb04425 Jeff King execv_dashed_external: stop exiting with negative code ]

	else if (
[ 0ac77ec3150f43a5c2a6b1e47e9db5aafe53fb72 Johannes Sixt run_command: report system call errors instead of returning error codes ]
errno
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]
 !=
[ 0ac77ec3150f43a5c2a6b1e47e9db5aafe53fb72 Johannes Sixt run_command: report system call errors instead of returning error codes ]
 ENOENT
[ d8e96fd86d415554a9c2e09ffb929a9e22fdad25 Jeff King git: use run_command() to execute dashed externals ]
)
[ 246f0edec0b789ccfeebcf7fef85417b7cb04425 Jeff King execv_dashed_external: stop exiting with negative code ]

		exit(128);
[ 97fc6c5fbacc2181319bbd7e2faa8ac04476f862 Andreas Ericsson git --help COMMAND brings up the git-COMMAND man-page. ]

}
[ 5786f4fac7afa881a306e2b771a0307e4ee05384 Junio C Hamano Merge branch 'as/autocorrect-alias' ]


static int run_
[ 8af84dadb142f7321ff0ce8690385e99da8ede2f Johannes Schindelin git wrapper: DWIM mistyped commands ]
argv(
[ 5786f4fac7afa881a306e2b771a0307e4ee05384 Junio C Hamano Merge branch 'as/autocorrect-alias' ]
int *argcp
[ 8af84dadb142f7321ff0ce8690385e99da8ede2f Johannes Schindelin git wrapper: DWIM mistyped commands ]
,
[ 5786f4fac7afa881a306e2b771a0307e4ee05384 Junio C Hamano Merge branch 'as/autocorrect-alias' ]
 const char ***
[ 8af84dadb142f7321ff0ce8690385e99da8ede2f Johannes Schindelin git wrapper: DWIM mistyped commands ]
argv)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

{
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]

	int done_alias = 0;
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]

	struct string_list cmd_list = STRING_LIST_INIT_NODUP;
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]

	struct string_list_item *seen;
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]


	while (1) {
[ 73c2779f421fe1eaead6f1c07a0e134a9c17d6db Paul Tan builtin-am: implement skeletal builtin am ]

		/*
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]

		 *
[ 441981bc85ea2b648d7ffb2515b371071208e657 Junio C Hamano git: simplify environment save/restore logic ]
 If we tried alias and futzed with our environment,
		 * it no longer is safe to invoke builtins directly in
		 * general.  We have to spawn them as dashed externals.
		 *
[ 73c2779f421fe1eaead6f1c07a0e134a9c17d6db Paul Tan builtin-am: implement skeletal builtin am ]

		 * NEEDSWORK:
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]
 if
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
 we can figure out cases
[ 441981bc85ea2b648d7ffb2515b371071208e657 Junio C Hamano git: simplify environment save/restore logic ]

		 *
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
 where it is safe to do, we can avoid spawning a new
[ 441981bc85ea2b648d7ffb2515b371071208e657 Junio C Hamano git: simplify environment save/restore logic ]

		 *
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
 process.
[ 73c2779f421fe1eaead6f1c07a0e134a9c17d6db Paul Tan builtin-am: implement skeletal builtin am ]

		 */
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]

		if (!
[ 441981bc85ea2b648d7ffb2515b371071208e657 Junio C Hamano git: simplify environment save/restore logic ]
done
[ 86d26f240fcb4f287258ad459efc2b5e30e60cfd Nguyễn Thái Ngọc Duy setup.c: re-fix d95138e (setup: set env $GIT_WORK_TREE when .. ]
_alias
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

			handle_
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]
builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
(
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
*argcp
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
,
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
 *
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
argv
[ da6bf70ebf7d485e3643ba3569962a4c08e37906 Andreas Ericsson git: grok 'help' to mean '--help'. ]
);
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]


#if 0 // TODO In GFW, need to amend a7924b655e940b06cb547c235d6bed9767929673 to include trace2_ and _tr2 lines.
		else if (get_builtin(**argv)) {
			struct argv_array args = ARGV_ARRAY_INIT;
			int i;

			/*
			 * The current process is committed to launching a
			 * child process to run the command named in (**argv)
			 * and exiting.  Log a generic string as the trace2
			 * command verb to indicate this.  Note that the child
			 * process will log the actual verb when it runs.
			 */
			trace2_cmd_name("_run_git_alias_");

			if (get_super_prefix())
				die("%s doesn't support --super-prefix", **argv);

			commit_pager_choice();

			argv_array_push(&args, "git");
			for (i = 0; i < *argcp; i++)
				argv_array_push(&args, (*argv)[i]);

			trace_argv_printf(args.argv, "trace: exec:");
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]


			/*
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			 * if we fail because the command is not found, it is
			 * OK to return. Otherwise, we just pass along the status code.
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]

			 */
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

			i = run_command_v_opt_tr2(args.argv,
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]
 RUN_
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
SILENT
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]
_
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
EXEC
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]
_
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
FAILURE |
						  RUN_CLEAN_ON_EXIT
[ e36adf712251a19bd2ada0016764d340dfcf2ba0 Junio C Hamano Merge branch 'ps/stash-in-c' ]
,
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]
 "git_alias");
			if (i >= 0 || errno != ENOENT)
				exit(i);
			die("could not execute builtin %s", **argv);
[ 477f2b41310c4b1040a9e7f72720b9c39d82caf9 Junio C Hamano git log --full-diff ]

		}
[ ee4512ed481a126dadd33334186e0e759d7f2f47 Jeff Hostetler trace2: create new combined trace facility ]

#endif // a7924b655e940b06cb547c235d6bed9767929673
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


		/
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
*
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 .. then try the external ones */
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]

		execv_
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
dashed
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
_
[ 7550be0a2bbf47aaa63c806bb5d7fcb8ab197cf8 Junio C Hamano Prepare execv_git_cmd() for removal of builtins from the filesystem ]
external
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
(
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
*
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
argv
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
);
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]


		seen =
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]
 unsorted_string_list_
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]
lookup
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]
(&cmd_list, *argv[0])
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]
;
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]

		if (
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
seen) {
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]

			int i;
			struct strbuf sb = STRBUF_INIT;
			for (i = 0; i < cmd_list.nr;
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
 i++) {
[ 82f71d9a5a9df718553bf257ad8610e2ef1e1179 Tim Schumacher alias: show the call history when an alias is looping ]

				struct string_list_item *item = &cmd_list.items[i];

				strbuf_addf(&sb, "\n  %s", item->string);
				if (item == seen)
					strbuf_addstr(&sb, " <==");
				else if (i == cmd_list.nr - 1)
					strbuf_addstr(&sb, " ==>");
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

			}
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]

			die
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
(_("
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
alias loop detected: expansion of
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
 '%s'
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
 does"
			      " not terminate:
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
%s"),
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
 cmd
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
_
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
list.items[0].string
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
,
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]
 sb.buf
[ 7752999cd6bbe1aff4e34f83ed078ffffc232667 Junio C Hamano Merge branch 'rv/alias-help' ]
);
[ 52b70d56bd23811003a72866cc23a0a44b9da1b7 Junio C Hamano git log [diff-tree options]... ]

		}
[ 506ee60d222f94a1598769feaba3b3621bd9fa1a Junio C Hamano Merge branch 'ts/alias-of-alias' ]


		string_list_append(&cmd_list, *argv[0]);
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


		/*
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]

		 * It could be an alias -- this works around the insanity
		 * of overriding "git log" with "git show" by having
		 * alias.log = show
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

		 */
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]

		if (
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]
!
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
handle_alias(
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
argcp, argv))
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]

			break;
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]

		done
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
_alias
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]
 = 1
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
;
[ 52b70d56bd23811003a72866cc23a0a44b9da1b7 Junio C Hamano git log [diff-tree options]... ]

	}
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]


	string_list_clear
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
(
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]
&cmd
[ a025463bc0ec2c894a88f2dfb44cf88ba71bb712 Junio C Hamano git alias: try alias last. ]
_
[ c6d75bc17a045af8cadd2dce982f5737a5ca38bb Tim Schumacher alias: add support for aliases of an alias ]
list, 0
[ c0562611c525bb3c564b79c345fc7e4f9e799e54 Nguyễn Thái Ngọc Duy git potty: restore environments after alias expansion ]
);
[ 5786f4fac7afa881a306e2b771a0307e4ee05384 Junio C Hamano Merge branch 'as/autocorrect-alias' ]


	return done_alias
[ 8af84dadb142f7321ff0ce8690385e99da8ede2f Johannes Schindelin git wrapper: DWIM mistyped commands ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

}
[ d7ed183a918bf6330d9036ca2d710d771b4b6198 Junio C Hamano Merge branch 'rt/help-unknown' ]


int cmd
[ 9d04401ffe18138138e8f765c2bb31420f3efe25 Junio C Hamano Merge branch 'cc/interpret-trailers' ]
_
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
main(int argc,
[ 9201c707426b3dc0c894775416f576c25c008d46 Junio C Hamano Const tightening. ]
 const
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
 char **argv)
[ ea77e675e564211513ebedb4f5bdcda482d7fd30 Linus Torvalds Make "git help" react to window size correctly ]

{
[ 9201c707426b3dc0c894775416f576c25c008d46 Junio C Hamano Const tightening. ]

	const
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 char *cmd
[ 4dd47c3b867f51211d0dc4474dab0fee5ca614da Steve Haslam Refactor git_set_argv0_path() to git_extract_argv0_path() ]
;
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]

	int done_help = 0;
[ 4dd47c3b867f51211d0dc4474dab0fee5ca614da Steve Haslam Refactor git_set_argv0_path() to git_extract_argv0_path() ]


	cmd =
[ 5b6df8e45f31c7eb26c30536448cffe1b715e1ce Dmitry V. Levin Handle invalid argc gently ]
 argv[0]
[ 4dd47c3b867f51211d0dc4474dab0fee5ca614da Steve Haslam Refactor git_set_argv0_path() to git_extract_argv0_path() ]
;
	if (
[ 2cd72b0b290e40fb4d6a925ce26603503f01aa09 Steffen Prohaska git_extract_argv0_path(): Move check for valid argv0 from caller to callee ]
!cmd
[ 4dd47c3b867f51211d0dc4474dab0fee5ca614da Steve Haslam Refactor git_set_argv0_path() to git_extract_argv0_path() ]
)
		cmd =
[ 5b6df8e45f31c7eb26c30536448cffe1b715e1ce Dmitry V. Levin Handle invalid argc gently ]
 "git-help"
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	else {
[ 6854a8f5c9ecf32f5bd85020e77d48d3ffdf48fc Jeff King common-main: stop munging argv[0] path ]

		const char *slash = find
[ 95c2b13a5fc06db6556def93843653e948e71e4b Junio C Hamano Merge branch 'jk/common-main' ]
_
[ 6854a8f5c9ecf32f5bd85020e77d48d3ffdf48fc Jeff King common-main: stop munging argv[0] path ]
last
[ 95c2b13a5fc06db6556def93843653e948e71e4b Junio C Hamano Merge branch 'jk/common-main' ]
_
[ 6854a8f5c9ecf32f5bd85020e77d48d3ffdf48fc Jeff King common-main: stop munging argv[0] path ]
dir_sep
[ 95c2b13a5fc06db6556def93843653e948e71e4b Junio C Hamano Merge branch 'jk/common-main' ]
(cmd);
		if (
[ 6854a8f5c9ecf32f5bd85020e77d48d3ffdf48fc Jeff King common-main: stop munging argv[0] path ]
slash
[ 95c2b13a5fc06db6556def93843653e948e71e4b Junio C Hamano Merge branch 'jk/common-main' ]
)
[ 6854a8f5c9ecf32f5bd85020e77d48d3ffdf48fc Jeff King common-main: stop munging argv[0] path ]

			cmd = slash + 1
[ 95c2b13a5fc06db6556def93843653e948e71e4b Junio C Hamano Merge branch 'jk/common-main' ]
;
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

	}
[ 9f2de9c121c60cba9e55db5263a7bceffcd8fe2d Junio C Hamano Merge branch 'kb/perf-trace' ]


	trace_command_performance(argv)
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


	/*
	 * "git-xxxx" is the same as "git xxxx", but we obviously:
	 *
	 *  - cannot take flags in between the "git" and the "xxxx".
	 *  - cannot execute it externally (since it would just do
	 *    the same thing over again)
	 *
	 * So we just directly call the
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]
 builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 handler, and die if
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]

	 *
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 that one cannot handle it.
	 */
	if (
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
prefix
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
(cmd, "git-"
[ e91ae32a01ffe294b8510c1d8cd7138493a0712f Junio C Hamano Merge branch 'jk/skip-prefix' ]
, &cmd
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
)) {
		argv[0] = cmd;
		handle_
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]
builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
(argc, argv);
		die
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
("cannot handle %s
[ 3f784a4dcbe270a1f48b23177917a1832a777d1c Sebastian Schuberth git.c: consistently use the term "builtin" instead of "internal command" ]
 as a builtin
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
, cmd);
[ 7dbc2c0402d728a206d4f1bc59729bf3a5cc4455 Junio C Hamano git wrapper: basic fixes. ]

	}
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


	/* Look for flags.. */
[ 7ae0b0cb65f069b657155abcb6aa6780b93ce881 Junio C Hamano git-log (internal): more options. ]

	argv++;
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	argc--;
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]

	handle_options(&argv, &argc
[ 4394efecfa9f94ad14fe49bc9f499c5806aa83af Matthias Lederhofer make git barf when an alias changes environment variables ]
, NULL
[ 4ab243a944a6013d9e862adadd6fe6152c842401 Johannes Schindelin Allow an alias to start with "-p" ]
)
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

	if
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 (argc >
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
 0
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
) {
[ 6d87780399e1196932cd5ea72f84aa90224e7402 Jeff King git: avoid magic number with skip_prefix ]

		/* translate --help and --version into commands */
		skip
[ 59556548230e617b837343c2c07e357e688e2ca4 Christian Couder replace {pre,suf}fixcmp() with {starts,ends}_with() ]
_
[ 6d87780399e1196932cd5ea72f84aa90224e7402 Jeff King git: avoid magic number with skip_prefix ]
prefix
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
(
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
argv[0]
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
, "--"
[ 6d87780399e1196932cd5ea72f84aa90224e7402 Jeff King git: avoid magic number with skip_prefix ]
, &
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]
argv[0]
[ 6d87780399e1196932cd5ea72f84aa90224e7402 Jeff King git: avoid magic number with skip_prefix ]
)
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
;
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

	} else {
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

		/*
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]
 The user didn't specify a
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 command
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]
; give them
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 help */
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]

		commit_pager_choice
[ 9590b041ea464c46d5a6811df5bce83c5dd4d457 Junio C Hamano Builtins: control the use of pager from the command table. ]
();
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]

		printf
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
(_
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]
(
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
"
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]
usage: %s\n\n
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
"
[ 8aa8c1409774ba4fd718bfa9f7f667170aa3089b Nguyễn Thái Ngọc Duy git.c: mark more strings for translation ]
)
[ 3d7e2d857a570b1d6368285f95b67994fc95629e Scott R Parish "git" returns 1; "git help" and "git help -a" return 0 ]
, git_usage_string)
[ 4e10738a9392ad285aca7d3a19e6775d6b7b513e Jeff King Allow per-command pager config ]
;
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]

		list_common_cmds
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
_
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
help
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
(
[ a87cd02ce02e97083eb76eb8b9bfeb2e46800fd7 Fredrik Kuivinen Nicer output from 'git' ]
);
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]

		printf("\n%s\n",
[ 421a97694590c2be58f3ccebf301c7239289aa00 Kevin Bracey Translate git_more_info_string consistently ]
 _(
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
git_more_info_string)
[ 421a97694590c2be58f3ccebf301c7239289aa00 Kevin Bracey Translate git_more_info_string consistently ]
)
[ b7d9681974e61959f10c7b2c1063b7781c5b904e Teemu Likonen Print info about "git help COMMAND" on git's main usage pages ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

		exit(1);
[ 70b006b9712b57741ec1320b15aef2f8b1d6a905 Linus Torvalds Tie it all together: "git log" ]

	}
[ 6acbcb927f8e34857fa8f68fcb4f9076941b24ff Johannes Schindelin git wrapper: add --git-dir=<path> and --bare options ]

	cmd = argv[0];
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]


	/
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
*
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]

	 * We
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 use PATH to find
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
 git
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 commands
[ 2ae68fcb785a617793813abcea19893e13e436b0 Carlos Rica Make verify-tag a builtin. ]
,
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 but we prepend some higher
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	 *
[ 3ea3c215c02dc4a4e7d0881c25b2223540960797 Mike Ralphson Fix typos / spelling in comments ]
 precedence
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 paths: the
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
 "
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
-
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
-exec-path" option,
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 the
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
 GIT_EXEC_PATH
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]

	 * environment, and
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 the
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
 $
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
(
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
gitexecdir
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
)
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 from the
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
 Makefile
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 at build
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	 *
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]
 time
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
.
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]

	 */
[ 511707d42b3b3e57d9623493092590546ffeae80 Scott R Parish use only the $PATH for exec'ing git commands ]

	setup
[ cf32190aa6966dea519e77cdcc80b87026beb3b4 Junio C Hamano git.c: execution path ]
_path
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
()
[ 77cb17e940c806a4cc811bfd66187277b729a1e7 Michal Ostrowski Exec git programs without using PATH. ]
;
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]


	while (1) {
		int was_alias = run_argv(
[ 2b11e3170e919866c7f5554dd4089289a1bb6726 Johannes Schindelin If you have a config containing something like this: ]
&argc, &argv)
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

		if (
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]
errno
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
 !
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]
= ENOENT
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
)
			break;
		if (was_alias
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]
)
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]
 {
			fprintf(stderr,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]
"expansion of alias '%s' failed; "
					  "'%s' is not a git command\n"
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]
,
				cmd, argv[0]);
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

			exit(1);
		}
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]

		if (
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
!
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]
done_
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
help
[ f3dd015c9147e3116fc1941d96f4dad38386b1db Theodore Ts'o Print a sane error message if an alias expands to an invalid git command ]
) {
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]

			cmd =
[ c9c6cc8d7db312b9e8502f8d55422b8309cde2f3 Shawn O. Pearce Merge branch 'maint' ]
 argv[0] =
[ 822a7d507151e1d6310f52d5b05234d65db11a88 Ramsay Allan Jones Remove cmd_usage() routine and re-organize the help/usage code. ]
 help_unknown_cmd(
[ 231af8322ac5313243bc1e8beac8dfd9ff95051d Linus Torvalds Teach the "git" command to handle some commands internally ]
cmd
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
);
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]

			done
[ c9c6cc8d7db312b9e8502f8d55422b8309cde2f3 Shawn O. Pearce Merge branch 'maint' ]
_
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]
help = 1
[ c9c6cc8d7db312b9e8502f8d55422b8309cde2f3 Shawn O. Pearce Merge branch 'maint' ]
;
[ a907e1b6ec3038306df68dc1275edad7457bba4b Adeodato Simó git.c: make autocorrected aliases work ]

		} else
			break
[ 8af84dadb142f7321ff0ce8690385e99da8ede2f Johannes Schindelin git wrapper: DWIM mistyped commands ]
;
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]

	}
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]


	fprintf
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
(
[ 10b15b86f545e081aebba8783ad9e9acf6bf0d98 Alex Riesen git wrapper: more careful argument stuffing ]
stderr
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
,
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
 _(
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
"failed to run command '%s': %s\n"
[ fc045fe7d4fa220f19274715c936636fe0516ea3 Alexander Shopov Mark messages for translations ]
)
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
,
[ 33ebb8717f15a85615f712df125c37737062e1b2 Andreas Ericsson git wrapper: fix command name in an error message. ]

		cmd
[ 8e49d50388211a0f3e7286f6ee600bf7736f4814 Andreas Ericsson C implementation of the 'git' program, take two. ]
, strerror(errno));

	return 1;
}